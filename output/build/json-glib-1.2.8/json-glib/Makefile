# Makefile.in generated by automake 1.15 from Makefile.am.
# json-glib/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2014 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# preamble

# Rules for generating enumeration types using glib-mkenums
#
# Define:
# 	glib_enum_h = header template file
# 	glib_enum_c = source template file
# 	glib_enum_headers = list of headers to parse
#
# before including Makefile.am.enums. You will also need to have
# the following targets already defined:
#
# 	CLEANFILES
#	DISTCLEANFILES
#	BUILT_SOURCES
#	EXTRA_DIST
#
# Author: Emmanuele Bassi <ebassi@linux.intel.com>

# Author: Fan, Chun-wei
# Common Autotools file used to generate Visual Studio 2008+
# Projects from their templates

# This autotools file, from GLib, can be used in other projects
# that have Visual Studio build support, and is copied into
# $(srcroot)/build/.

# * Input variables:
#
#   MSVCPROJS - List of Projects that should be generated
#
# * Simple tutorial
#
# Add this to Makefile.am where your library/program is built:
#   include $(top_srcdir)/build/Makefile.msvcproj
#   MSVCPROJS = YourProject (can be multiple projects in a single srcdir)
#   YourProject_FILES = $(libyourlib_1_0_SOURCES)
#   YourProject_EXCLUDES = ... # list of sources to exclude, separated by '|', wildcards allowed; use random unsed value if none
#   YourProject_HEADERS_DIR = $(libyourlibincludedir)
#   YourProject_HEADERS_INST = $(libyourlib_1_0_HEADERS)
#   YourProject_HEADERS_EXCLUDES = ... # <list of headers to exclude from installation, separated by '|', wildcards allowed; use random unsed value if none>
#
#   dist-hook: \ # (or add to it if it is already there, note the vs9 items will also call the vs10 items in the process)
#   	$(top_builddir)/build/win32/vs9/YourProject.vcproj	\
#   	$(top_builddir)/build/win32/vs9/YourProject.headers

# Private functions

# Author: Fan, Chun-wei
# Common autotools file for constructing the g-ir-scanner and
# g-ir-compiler command lines for Visual Studio builds.

# This is copied from $(srcroot)/build from the gobject-introspection
# project, which may be included in projects that support both
# Visual Studio builds and introspection.

# * Input variables:
#
#   MSVC_INTROSPECT_GIRS - List of .gir's that should be built
#                          in the NMake Makefiles
#
# * Simple tutorial
#
# Add this to Makefile.am where your library/program is built:
#   (Either YourLib_1_0_gir_MSVC_LIBS or YourLib_1_0_gir_MSVC_PROGRAM
#    is required unless --headers-only is specified in
#    YourLib_1_0_gir__MSVC_SCANNERFLAGS)
#
#   include $(top_srcdir)/build/Makefile.msvc-introspection
#   MSVC_INTROSPECT_GIRS = YourLib-1.0.gir
#   YourLib_1_0_gir_NAMESPACE = YourLib # This is optional
#   YourLib_1_0_gir_VERSION = 1.0 # This is optional
#   YourLib_1_0_gir_MSVC_LIBS = yourlib-1.0
#   YourLib_1_0_gir_MSVC_FILES = $(libyourlib_1_0_SOURCES)
#   YourLib_1_0_gir_MSVC_PROGRAM = YourProgram
#   YourLib_1_0_gir_MSVC_PACKAGES = (Dependent .pc files)
#   YourLib_1_0_gir_MSVC_INCLUDE_GIRS = (Dependent external .gir's)
#   YourLiv_1_0_gir_MSVC_EXPORT_PACKAGES = (Packages exported by this .gir)

# Private functions




am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/json-glib
pkgincludedir = $(includedir)/json-glib
pkglibdir = $(libdir)/json-glib
pkglibexecdir = $(libexecdir)/json-glib
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-pc-linux-gnu
host_triplet = arm-buildroot-linux-gnueabihf
bin_PROGRAMS = json-glib-validate$(EXEEXT) json-glib-format$(EXEEXT)
#am__append_1 = $(dist_gir_DATA) $(typelibs_DATA)
subdir = json-glib
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps =  \
	$(top_srcdir)/build/autotools/as-compiler-flag.m4 \
	$(top_srcdir)/build/autotools/as-linguas.m4 \
	$(top_srcdir)/build/autotools/gettext.m4 \
	$(top_srcdir)/build/autotools/glibtests.m4 \
	$(top_srcdir)/build/autotools/gtk-doc.m4 \
	$(top_srcdir)/build/autotools/iconv.m4 \
	$(top_srcdir)/build/autotools/intlmacosx.m4 \
	$(top_srcdir)/build/autotools/introspection.m4 \
	$(top_srcdir)/build/autotools/jh-catalog.m4 \
	$(top_srcdir)/build/autotools/lib-ld.m4 \
	$(top_srcdir)/build/autotools/lib-link.m4 \
	$(top_srcdir)/build/autotools/lib-prefix.m4 \
	$(top_srcdir)/build/autotools/libtool.m4 \
	$(top_srcdir)/build/autotools/ltoptions.m4 \
	$(top_srcdir)/build/autotools/ltsugar.m4 \
	$(top_srcdir)/build/autotools/ltversion.m4 \
	$(top_srcdir)/build/autotools/lt~obsolete.m4 \
	$(top_srcdir)/build/autotools/nls.m4 \
	$(top_srcdir)/build/autotools/po.m4 \
	$(top_srcdir)/build/autotools/progtest.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__dist_gir_DATA_DIST) \
	$(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = config.h
CONFIG_CLEAN_FILES = json-glib.pc json-version.h
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" \
	"$(DESTDIR)$(girdir)" "$(DESTDIR)$(jsonincludedir)" \
	"$(DESTDIR)$(pkgconfigdir)" "$(DESTDIR)$(typelibsdir)"
LTLIBRARIES = $(lib_LTLIBRARIES)
am__DEPENDENCIES_1 =
libjson_glib_1_0_la_DEPENDENCIES = $(am__DEPENDENCIES_1)
am__objects_1 =
am__objects_2 = libjson_glib_1_0_la-json-array.lo \
	libjson_glib_1_0_la-json-builder.lo \
	libjson_glib_1_0_la-json-debug.lo \
	libjson_glib_1_0_la-json-gboxed.lo \
	libjson_glib_1_0_la-json-generator.lo \
	libjson_glib_1_0_la-json-gobject.lo \
	libjson_glib_1_0_la-json-gvariant.lo \
	libjson_glib_1_0_la-json-node.lo \
	libjson_glib_1_0_la-json-object.lo \
	libjson_glib_1_0_la-json-parser.lo \
	libjson_glib_1_0_la-json-path.lo \
	libjson_glib_1_0_la-json-reader.lo \
	libjson_glib_1_0_la-json-scanner.lo \
	libjson_glib_1_0_la-json-serializable.lo \
	libjson_glib_1_0_la-json-utils.lo \
	libjson_glib_1_0_la-json-value.lo $(am__objects_1)
am__objects_3 = $(am__objects_1)
am__objects_4 = libjson_glib_1_0_la-json-enum-types.lo
am__objects_5 = $(am__objects_1) $(am__objects_4)
am_libjson_glib_1_0_la_OBJECTS = $(am__objects_2) $(am__objects_3) \
	$(am__objects_3) $(am__objects_5)
libjson_glib_1_0_la_OBJECTS = $(am_libjson_glib_1_0_la_OBJECTS)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
libjson_glib_1_0_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(libjson_glib_1_0_la_CFLAGS) $(CFLAGS) \
	$(libjson_glib_1_0_la_LDFLAGS) $(LDFLAGS) -o $@
PROGRAMS = $(bin_PROGRAMS)
am_json_glib_format_OBJECTS =  \
	json_glib_format-json-glib-format.$(OBJEXT)
json_glib_format_OBJECTS = $(am_json_glib_format_OBJECTS)
json_glib_format_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	libjson-glib-1.0.la
json_glib_format_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(json_glib_format_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
am_json_glib_validate_OBJECTS =  \
	json_glib_validate-json-glib-validate.$(OBJEXT)
json_glib_validate_OBJECTS = $(am_json_glib_validate_OBJECTS)
json_glib_validate_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	libjson-glib-1.0.la
json_glib_validate_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(json_glib_validate_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.
depcomp = $(SHELL) $(top_srcdir)/build/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(libjson_glib_1_0_la_SOURCES) $(json_glib_format_SOURCES) \
	$(json_glib_validate_SOURCES)
DIST_SOURCES = $(libjson_glib_1_0_la_SOURCES) \
	$(json_glib_format_SOURCES) $(json_glib_validate_SOURCES)
RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \
	ctags-recursive dvi-recursive html-recursive info-recursive \
	install-data-recursive install-dvi-recursive \
	install-exec-recursive install-html-recursive \
	install-info-recursive install-pdf-recursive \
	install-ps-recursive install-recursive installcheck-recursive \
	installdirs-recursive pdf-recursive ps-recursive \
	tags-recursive uninstall-recursive
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__dist_gir_DATA_DIST = Json-1.0.gir
DATA = $(dist_gir_DATA) $(jsoninclude_DATA) $(pkgconfig_DATA) \
	$(typelibs_DATA)
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
am__recursive_targets = \
  $(RECURSIVE_TARGETS) \
  $(RECURSIVE_CLEAN_TARGETS) \
  $(am__extra_recursive_targets)
AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \
	distdir
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) \
	$(LISP)config.h.in
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
DIST_SUBDIRS = $(SUBDIRS)
am__DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/config.h.in \
	$(srcdir)/json-glib.pc.in $(srcdir)/json-version.h.in \
	$(top_srcdir)/build/Makefile.msvc-introspection \
	$(top_srcdir)/build/Makefile.msvcproj \
	$(top_srcdir)/build/autotools/Makefile.am.enums \
	$(top_srcdir)/build/depcomp
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
am__relativize = \
  dir0=`pwd`; \
  sed_first='s,^\([^/]*\)/.*$$,\1,'; \
  sed_rest='s,^[^/]*/*,,'; \
  sed_last='s,^.*/\([^/]*\)$$,\1,'; \
  sed_butlast='s,/*[^/]*$$,,'; \
  while test -n "$$dir1"; do \
    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
    if test "$$first" != "."; then \
      if test "$$first" = ".."; then \
        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
      else \
        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
        if test "$$first2" = "$$first"; then \
          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
        else \
          dir2="../$$dir2"; \
        fi; \
        dir0="$$dir0"/"$$first"; \
      fi; \
    fi; \
    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
  done; \
  reldir="$$dir2"
ACLOCAL = ${SHELL} /media/panpan/tools/buildroot-2018.02.8/output/build/json-glib-1.2.8/build/missing aclocal-1.15 
ALL_LINGUAS = as bg bn_IN bs ca ca@valencia cs da de el en_GB eo es et eu fr fur gl he hi hu id it ja ko ky lt lv ml nb oc or pa pl pt pt_BR ro ru sk sl sr sr@latin sv te tg tr ug uk vi zh_CN zh_HK zh_TW 
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 0
AR = /media/panpan/tools/buildroot-2018.02.8/output/host/bin/arm-linux-gnueabihf-ar
AUTOCONF = ${SHELL} /media/panpan/tools/buildroot-2018.02.8/output/build/json-glib-1.2.8/build/missing autoconf
AUTOHEADER = ${SHELL} /media/panpan/tools/buildroot-2018.02.8/output/build/json-glib-1.2.8/build/missing autoheader
AUTOMAKE = ${SHELL} /media/panpan/tools/buildroot-2018.02.8/output/build/json-glib-1.2.8/build/missing automake-1.15
AWK = gawk
CC = /media/panpan/tools/buildroot-2018.02.8/output/host/bin/arm-linux-gnueabihf-gcc
CCDEPMODE = depmode=none
CFLAGS = -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os 
CPP = /media/panpan/tools/buildroot-2018.02.8/output/host/bin/arm-linux-gnueabihf-cpp
CPPFLAGS = -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = false
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
FGREP = /bin/grep -F
GETTEXT_MACRO_VERSION = 0.18
GETTEXT_PACKAGE = json-glib-1.0
GLIB_CFLAGS = -I/media/panpan/tools/buildroot-2018.02.8/output/host/bin/../arm-buildroot-linux-gnueabihf/sysroot/usr/include/glib-2.0 -I/media/panpan/tools/buildroot-2018.02.8/output/host/bin/../arm-buildroot-linux-gnueabihf/sysroot/usr/lib/glib-2.0/include -I/media/panpan/tools/buildroot-2018.02.8/output/host/bin/../arm-buildroot-linux-gnueabihf/sysroot/usr/include  
GLIB_COMPILE_RESOURCES = glib-compile-resources
GLIB_GENMARSHAL = glib-genmarshal
GLIB_LIBS = -L/media/panpan/tools/buildroot-2018.02.8/output/host/bin/../arm-buildroot-linux-gnueabihf/sysroot/usr/lib -lglib-2.0  
GLIB_MKENUMS = glib-mkenums
GLIB_PREFIX = /usr
GMSGFMT = /media/panpan/tools/buildroot-2018.02.8/output/host/bin/msgfmt
GMSGFMT_015 = /media/panpan/tools/buildroot-2018.02.8/output/host/bin/msgfmt
GOBJECT_QUERY = gobject-query
GREP = /bin/grep
GTKDOC_CHECK = 
GTKDOC_CHECK_PATH = 
GTKDOC_DEPS_CFLAGS = -I/media/panpan/tools/buildroot-2018.02.8/output/host/bin/../arm-buildroot-linux-gnueabihf/sysroot/usr/include/glib-2.0 -I/media/panpan/tools/buildroot-2018.02.8/output/host/bin/../arm-buildroot-linux-gnueabihf/sysroot/usr/lib/glib-2.0/include -I/media/panpan/tools/buildroot-2018.02.8/output/host/bin/../arm-buildroot-linux-gnueabihf/sysroot/usr/include  
GTKDOC_DEPS_LIBS = -L/media/panpan/tools/buildroot-2018.02.8/output/host/bin/../arm-buildroot-linux-gnueabihf/sysroot/usr/lib -lgobject-2.0 -lglib-2.0  
GTKDOC_MKPDF = 
GTKDOC_REBASE = true
HTML_DIR = ${datadir}/gtk-doc/html
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
INTLLIBS = 
INTL_MACOSX_LIBS = 
INTROSPECTION_CFLAGS = 
INTROSPECTION_COMPILER = 
INTROSPECTION_GENERATE = 
INTROSPECTION_GIRDIR = 
INTROSPECTION_LIBS = 
INTROSPECTION_MAKEFILE = 
INTROSPECTION_SCANNER = 
INTROSPECTION_TYPELIBDIR = 
JSON_CFLAGS = -I/media/panpan/tools/buildroot-2018.02.8/output/host/bin/../arm-buildroot-linux-gnueabihf/sysroot/usr/include/glib-2.0 -I/media/panpan/tools/buildroot-2018.02.8/output/host/bin/../arm-buildroot-linux-gnueabihf/sysroot/usr/lib/glib-2.0/include -I/media/panpan/tools/buildroot-2018.02.8/output/host/bin/../arm-buildroot-linux-gnueabihf/sysroot/usr/include -pthread  
JSON_DEBUG_CFLAGS = -DJSON_ENABLE_DEBUG -DG_DISABLE_CAST_CHECKS
JSON_GCOV_CFLAGS = 
JSON_GCOV_LDADD = 
JSON_HIDDEN_VISIBILITY_CFLAGS = -fvisibility=hidden
JSON_LIBS = -L/media/panpan/tools/buildroot-2018.02.8/output/host/bin/../arm-buildroot-linux-gnueabihf/sysroot/usr/lib -lgio-2.0 -lgobject-2.0 -lglib-2.0  
JSON_LT_LDFLAGS = -version-info 200:8:200 -Wl,-Bsymbolic-functions
JSON_MAJOR_VERSION = 1
JSON_MICRO_VERSION = 8
JSON_MINOR_VERSION = 2
JSON_RELEASE_STATUS = release
JSON_VERSION = 1.2.8
LD = /media/panpan/tools/buildroot-2018.02.8/output/host/bin/arm-linux-gnueabihf-ld
LDFLAGS = 
LIBICONV = -liconv
LIBINTL = 
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBICONV = -liconv
LTLIBINTL = 
LTLIBOBJS = 
LTP = 
LTP_GENHTML = 
LT_SYS_LIBRARY_PATH = 
MAINTAINER_CFLAGS = 
MAKEINFO = ${SHELL} /media/panpan/tools/buildroot-2018.02.8/output/build/json-glib-1.2.8/build/missing makeinfo
MANIFEST_TOOL = :
MKDIR_P = /bin/mkdir -p
MSGFMT = /media/panpan/tools/buildroot-2018.02.8/output/host/bin/msgfmt
MSGFMT_015 = /media/panpan/tools/buildroot-2018.02.8/output/host/bin/msgfmt
MSGMERGE = /media/panpan/tools/buildroot-2018.02.8/output/host/bin/msgmerge
NM = /media/panpan/tools/buildroot-2018.02.8/output/host/bin/arm-linux-gnueabihf-nm
NMEDIT = 
OBJDUMP = /media/panpan/tools/buildroot-2018.02.8/output/host/bin/arm-linux-gnueabihf-objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = json-glib
PACKAGE_BUGREPORT = http://bugzilla.gnome.org/enter_bug.cgi?product=json-glib
PACKAGE_NAME = JSON-GLib
PACKAGE_STRING = JSON-GLib 1.2.8
PACKAGE_TARNAME = json-glib
PACKAGE_URL = http://wiki.gnome.org/Project/JsonGlib
PACKAGE_VERSION = 1.2.8
PATH_SEPARATOR = :
PKG_CONFIG = /media/panpan/tools/buildroot-2018.02.8/output/host/bin/pkg-config
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = 
POSUB = 
RANLIB = /media/panpan/tools/buildroot-2018.02.8/output/host/bin/arm-linux-gnueabihf-ranlib
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/sh
SHTOOL = 
STRIP = /media/panpan/tools/buildroot-2018.02.8/output/host/bin/arm-linux-gnueabihf-strip
USE_NLS = no
VERSION = 1.2.8
XGETTEXT = /media/panpan/tools/buildroot-2018.02.8/output/host/bin/xgettext
XGETTEXT_015 = /media/panpan/tools/buildroot-2018.02.8/output/host/bin/xgettext
XGETTEXT_EXTRA_OPTIONS = 
XMLCATALOG = /media/panpan/tools/buildroot-2018.02.8/output/host/bin/xmlcatalog
XML_CATALOG_FILE = /etc/xml/catalog
XSLTPROC = /media/panpan/tools/buildroot-2018.02.8/output/host/bin/xsltproc
abs_builddir = /media/panpan/tools/buildroot-2018.02.8/output/build/json-glib-1.2.8/json-glib
abs_srcdir = /media/panpan/tools/buildroot-2018.02.8/output/build/json-glib-1.2.8/json-glib
abs_top_builddir = /media/panpan/tools/buildroot-2018.02.8/output/build/json-glib-1.2.8
abs_top_srcdir = /media/panpan/tools/buildroot-2018.02.8/output/build/json-glib-1.2.8
ac_ct_AR = 
ac_ct_CC = 
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = tar --format=ustar -chf - "$$tardir"
am__untar = tar -xf -
bindir = ${exec_prefix}/bin
build = x86_64-pc-linux-gnu
build_alias = x86_64-pc-linux-gnu
build_cpu = x86_64
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = /usr
host = arm-buildroot-linux-gnueabihf
host_alias = arm-buildroot-linux-gnueabihf
host_cpu = arm
host_os = linux-gnueabihf
host_vendor = buildroot
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /media/panpan/tools/buildroot-2018.02.8/output/build/json-glib-1.2.8/build/install-sh
installed_test_metadir = 
installed_testdir = 
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = /var
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr
program_transform_name = s&^&&
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = /etc
target_alias = arm-buildroot-linux-gnueabihf
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
NULL = 
AM_CPPFLAGS = 
AM_CFLAGS = 
BUILT_SOURCES = $(glib_enum_h) $(glib_enum_c)
CLEANFILES = stamp-enum-types $(pcfiles) $(am__append_1)
EXTRA_DIST = $(enum_tmpl_h) $(enum_tmpl_c) json-version.h.in \
	json-glib.h json-version.h json-glib.pc.in
DISTCLEANFILES = json-version.h $(glib_enum_h) $(glib_enum_c)
lib_LTLIBRARIES = libjson-glib-1.0.la

# build the tests last
SUBDIRS = . tests

# main library
source_h = \
	json-builder.h		\
	json-generator.h 	\
	json-gobject.h 		\
	json-gvariant.h		\
	json-parser.h 		\
	json-path.h		\
	json-reader.h		\
	json-types.h 		\
	json-utils.h		\
	json-version-macros.h	\
	$(NULL)

source_h_private = \
	json-debug.h		\
	json-gobject-private.h	\
	json-scanner.h 		\
	json-types-private.h	\
	$(NULL)

source_c = \
	json-array.c 		\
	json-builder.c	\
	json-debug.c		\
	json-gboxed.c		\
	json-generator.c 	\
	json-gobject.c 	\
	json-gvariant.c	\
	json-node.c 		\
	json-object.c 	\
	json-parser.c 	\
	json-path.c		\
	json-reader.c		\
	json-scanner.c 	\
	json-serializable.c	\
	json-utils.c		\
	json-value.c		\
	$(NULL)


# glib-mkenums rules
glib_enum_h = json-enum-types.h
glib_enum_c = json-enum-types.c
glib_enum_headers = $(source_h)
enum_tmpl_h = $(addprefix $(srcdir)/, $(glib_enum_h:.h=.h.in))
enum_tmpl_c = $(addprefix $(srcdir)/, $(glib_enum_c:.c=.c.in))
enum_headers = $(addprefix $(srcdir)/, $(glib_enum_headers))
libjson_glib_1_0_la_CPPFLAGS = \
	-DPREFIX=\""$(prefix)"\" \
	-DLIBDIR=\""$(libdir)"\" \
	-DJSON_LOCALEDIR=\""$(localedir)"\" \
	-DJSON_COMPILATION=1 \
	-DG_LOG_DOMAIN=\"Json\" \
	-I$(top_srcdir) \
	-I$(top_builddir) \
	$(JSON_DEBUG_CFLAGS) \
	$(NULL)

libjson_glib_1_0_la_CFLAGS = $(JSON_CFLAGS) $(JSON_HIDDEN_VISIBILITY_CFLAG) $(MAINTAINER_CFLAGS) $(JSON_GCOV_CFLAGS)
libjson_glib_1_0_la_LIBADD = $(JSON_LIBS)
libjson_glib_1_0_la_SOURCES = $(source_c) $(source_h) $(source_h_private) $(BUILT_SOURCES)
libjson_glib_1_0_la_LDFLAGS = $(JSON_LT_LDFLAGS) $(JSON_GCOV_LDADD) -export-dynamic
jsonincludedir = $(includedir)/json-glib-1.0/json-glib
jsoninclude_DATA = \
	$(source_h) \
	json-enum-types.h \
	json-version.h \
	json-glib.h \
	$(NULL)

pcfiles = json-glib-1.0.pc
pkgconfig_DATA = $(pcfiles)
pkgconfigdir = $(libdir)/pkgconfig
json_glib_validate_CPPFLAGS = -I$(top_srcdir) -I$(top_builddir) -DJSON_LOCALEDIR=\""$(localedir)"\"
json_glib_validate_CFLAGS = $(JSON_CFLAGS) $(MAINTAINER_CFLAGS)
json_glib_validate_SOURCES = json-glib-validate.c
json_glib_validate_LDADD = $(JSON_LIBS) libjson-glib-1.0.la
json_glib_format_CPPFLAGS = -I$(top_srcdir) -I$(top_builddir) -DJSON_LOCALEDIR=\""$(localedir)"\"
json_glib_format_CFLAGS = $(JSON_CFLAGS) $(MAINTAINER_CFLAGS)
json_glib_format_SOURCES = json-glib-format.c
json_glib_format_LDADD = $(JSON_LIBS) libjson-glib-1.0.la
#INTROSPECTION_GIRS = Json-1.0.gir
#introspection_source = \
#	$(source_c) \
#	$(source_h) \
#	json-enum-types.h \
#	json-enum-types.c \
#	json-version.h

#Json_1_0_gir_NAMESPACE = Json
#Json_1_0_gir_VERSION = 1.0
#Json_1_0_gir_LIBS = libjson-glib-1.0.la
#Json_1_0_gir_FILES = $(introspection_source)
#Json_1_0_gir_CFLAGS = -DJSON_COMPILATION=1 -I$(top_srcdir) -I$(top_builddir) $(JSON_CFLAGS)
#Json_1_0_gir_INCLUDES = GObject-2.0 Gio-2.0
#Json_1_0_gir_SCANNERFLAGS = --warn-all --pkg-export json-glib-1.0 --c-include "json-glib/json-glib.h"
#girdir = $(datadir)/gir-1.0
#dist_gir_DATA = Json-1.0.gir
#typelibsdir = $(libdir)/girepository-1.0/
#typelibs_DATA = Json-1.0.typelib

# visual studio
MSVCPROJS = json-glib
json_glib_FILES = $(libjson_glib_1_0_la_SOURCES)
json_glib_EXCLUDES = jgdummy
json_glib_HEADERS_DIR = $(jsonincludedir)
json_glib_HEADERS_INST = $(jsoninclude_DATA)
json_glib_HEADERS_EXCLUDES = jgdummy
_proj_name = $(subst /,_,$(subst -,_,$(subst .,_,$(1))))
_proj_path_raw := $(subst $(abs_top_srcdir),,$(abs_srcdir))
_proj_path = $(subst /,\\,$(_proj_path_raw))
_proj_subdir_int = $(subst \\\\,\\,\\$(_proj_path)\\)
_proj_subdir = $(subst \\.\\,\\,$(_proj_subdir_int))
_proj_files_raw = $(subst /,\\,$($(_proj_name)_FILES))
_proj_files = $(subst $(srcdir)\\,,$(subst $(builddir)\\,,$(subst $(top_builddir)\\$(_proj_path)\\,\\,$(_proj_files_raw))))
_proj_filters = $($(_proj_name)_EXCLUDES)
_proj_headers_raw = $(subst /,\\,$($(_proj_name)_HEADERS_INST))
_proj_headers = $(subst $(srcdir)\\,,$(subst $(builddir)\\,,$(subst $(top_builddir)\\$(_proj_path)\\,\\,$(_proj_headers_raw))))
_proj_headers_excludes = $($(_proj_name)_HEADERS_EXCLUDES)
_headers_dest_posix = $(subst $(includedir),,$($(_proj_name)_HEADERS_DIR))
_headers_destdir = $(subst /,\\,$(_headers_dest_posix))
NMAKE_INTROSPECTION_FILES = 

# NMake/MSVC introspection
#NMAKE_INTROSPECTION_FILES = \
#	$(top_builddir)/build/win32/Json-1.0.gir.msvc.introspect	\
#	$(top_builddir)/build/win32/Json_1_0_gir_list

#MSVC_INTROSPECT_GIRS = Json-1.0.gir
#Json_1_0_gir_MSVC_FILES = $(Json_1_0_gir_FILES)
#Json_1_0_gir_MSVC_INCLUDE_GIRS = $(Json_1_0_gir_INCLUDES)
#Json_1_0_gir_MSVC_LIBS = json-glib-1.0
#Json_1_0_gir_MSVC_CFLAGS = -DJSON_COMPILATION=1 -I..\\..
#Json_1_0_gir_MSVC_SCANNERFLAGS = $(Json_1_0_gir_SCANNERFLAGS)
#_gir_name = $(subst /,_,$(subst -,_,$(subst .,_,$(1))))

# Namespace and Version is either fetched from the gir filename
# or the _NAMESPACE/_VERSION variable combo
#_gir_namespace_msvc = $(or $($(_gir_name)_NAMESPACE),$(firstword $(subst -, ,$(notdir $(1)))))
#_gir_version_msvc = $(or $($(_gir_name)_VERSION),$(lastword $(subst -, ,$(1:.gir=))))
#_typelib_basename_msvc = $(_gir_namespace_msvc)'-'$(_gir_version_msvc)

# _PROGRAM is an optional variable which needs its own --program argument
#_gir_program_msvc = $(if $($(_gir_name)_MSVC_PROGRAM),--program=$($(_gir_name)_MSVC_PROGRAM))

# Deduce the sub-folder from $(srcroot) where the sources reside in
#_gir_source_path_raw_msvc := $(subst $(abs_top_srcdir),,$(abs_srcdir))
#_gir_source_path_msvc = $(subst /,\\,$(_gir_source_path_raw_msvc))
#_gir_source_subdir_int_msvc = $(subst \\\\,\\,\\$(_gir_source_path_msvc)\\)
#_gir_source_subdir_msvc = $(subst \\.\\,\\,$(_gir_source_subdir_int_msvc))
#_gir_files_raw_msvc = $(subst /,\\,$($(_gir_name)_MSVC_FILES))
#_gir_files_msvc = $(subst $(srcdir)\\,,$(subst $(builddir)\\,,$(subst $(top_builddir)\\$(_gir_source_path_msvc)\\,\\,$(_gir_files_raw_msvc))))

# Create a list of items for:
# - Libraries
# - Packages
# - GIRs to include
# - packages to export
#_gir_libraries_msvc = $(foreach lib,$($(_gir_name)_MSVC_LIBS),--library=$(lib))
#_gir_packages_msvc = $(foreach pkg,$($(_gir_name)_MSVC_PACKAGES),--pkg=$(pkg))
#_gir_includes_msvc = $(foreach include,$($(_gir_name)_MSVC_INCLUDE_GIRS),--include=$(include))
#_gir_export_packages_msvc = $(foreach pkg,$($(_gir_name)_MSVC_EXPORT_PACKAGES),--pkg-export=$(pkg))
all: $(BUILT_SOURCES) config.h
	$(MAKE) $(AM_MAKEFLAGS) all-recursive

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(top_srcdir)/build/autotools/Makefile.am.enums $(top_srcdir)/build/Makefile.msvcproj $(top_srcdir)/build/Makefile.msvc-introspection $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign json-glib/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign json-glib/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;
$(top_srcdir)/build/autotools/Makefile.am.enums $(top_srcdir)/build/Makefile.msvcproj $(top_srcdir)/build/Makefile.msvc-introspection $(am__empty):

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

config.h: stamp-h1
	@test -f $@ || rm -f stamp-h1
	@test -f $@ || $(MAKE) $(AM_MAKEFLAGS) stamp-h1

stamp-h1: $(srcdir)/config.h.in $(top_builddir)/config.status
	@rm -f stamp-h1
	cd $(top_builddir) && $(SHELL) ./config.status json-glib/config.h
$(srcdir)/config.h.in:  $(am__configure_deps) 
	($(am__cd) $(top_srcdir) && $(AUTOHEADER))
	rm -f stamp-h1
	touch $@

distclean-hdr:
	-rm -f config.h stamp-h1
json-glib.pc: $(top_builddir)/config.status $(srcdir)/json-glib.pc.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
json-version.h: $(top_builddir)/config.status $(srcdir)/json-version.h.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@

install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libdir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(libdir)"; \
	}

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$f"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

libjson-glib-1.0.la: $(libjson_glib_1_0_la_OBJECTS) $(libjson_glib_1_0_la_DEPENDENCIES) $(EXTRA_libjson_glib_1_0_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libjson_glib_1_0_la_LINK) -rpath $(libdir) $(libjson_glib_1_0_la_OBJECTS) $(libjson_glib_1_0_la_LIBADD) $(LIBS)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	 || test -f $$p1 \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

json-glib-format$(EXEEXT): $(json_glib_format_OBJECTS) $(json_glib_format_DEPENDENCIES) $(EXTRA_json_glib_format_DEPENDENCIES) 
	@rm -f json-glib-format$(EXEEXT)
	$(AM_V_CCLD)$(json_glib_format_LINK) $(json_glib_format_OBJECTS) $(json_glib_format_LDADD) $(LIBS)

json-glib-validate$(EXEEXT): $(json_glib_validate_OBJECTS) $(json_glib_validate_DEPENDENCIES) $(EXTRA_json_glib_validate_DEPENDENCIES) 
	@rm -f json-glib-validate$(EXEEXT)
	$(AM_V_CCLD)$(json_glib_validate_LINK) $(json_glib_validate_OBJECTS) $(json_glib_validate_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

#include ./$(DEPDIR)/json_glib_format-json-glib-format.Po
#include ./$(DEPDIR)/json_glib_validate-json-glib-validate.Po
#include ./$(DEPDIR)/libjson_glib_1_0_la-json-array.Plo
#include ./$(DEPDIR)/libjson_glib_1_0_la-json-builder.Plo
#include ./$(DEPDIR)/libjson_glib_1_0_la-json-debug.Plo
#include ./$(DEPDIR)/libjson_glib_1_0_la-json-enum-types.Plo
#include ./$(DEPDIR)/libjson_glib_1_0_la-json-gboxed.Plo
#include ./$(DEPDIR)/libjson_glib_1_0_la-json-generator.Plo
#include ./$(DEPDIR)/libjson_glib_1_0_la-json-gobject.Plo
#include ./$(DEPDIR)/libjson_glib_1_0_la-json-gvariant.Plo
#include ./$(DEPDIR)/libjson_glib_1_0_la-json-node.Plo
#include ./$(DEPDIR)/libjson_glib_1_0_la-json-object.Plo
#include ./$(DEPDIR)/libjson_glib_1_0_la-json-parser.Plo
#include ./$(DEPDIR)/libjson_glib_1_0_la-json-path.Plo
#include ./$(DEPDIR)/libjson_glib_1_0_la-json-reader.Plo
#include ./$(DEPDIR)/libjson_glib_1_0_la-json-scanner.Plo
#include ./$(DEPDIR)/libjson_glib_1_0_la-json-serializable.Plo
#include ./$(DEPDIR)/libjson_glib_1_0_la-json-utils.Plo
#include ./$(DEPDIR)/libjson_glib_1_0_la-json-value.Plo

.c.o:
#	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
#	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
#	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(COMPILE) -c -o $@ $<

.c.obj:
#	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
#	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
#	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
#	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
#	$(LTCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
#	$(am__mv) $$depbase.Tpo $$depbase.Plo
#	$(AM_V_CC)source='$<' object='$@' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(LTCOMPILE) -c -o $@ $<

libjson_glib_1_0_la-json-array.lo: json-array.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjson_glib_1_0_la_CPPFLAGS) $(CPPFLAGS) $(libjson_glib_1_0_la_CFLAGS) $(CFLAGS) -MT libjson_glib_1_0_la-json-array.lo -MD -MP -MF $(DEPDIR)/libjson_glib_1_0_la-json-array.Tpo -c -o libjson_glib_1_0_la-json-array.lo `test -f 'json-array.c' || echo '$(srcdir)/'`json-array.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/libjson_glib_1_0_la-json-array.Tpo $(DEPDIR)/libjson_glib_1_0_la-json-array.Plo
#	$(AM_V_CC)source='json-array.c' object='libjson_glib_1_0_la-json-array.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjson_glib_1_0_la_CPPFLAGS) $(CPPFLAGS) $(libjson_glib_1_0_la_CFLAGS) $(CFLAGS) -c -o libjson_glib_1_0_la-json-array.lo `test -f 'json-array.c' || echo '$(srcdir)/'`json-array.c

libjson_glib_1_0_la-json-builder.lo: json-builder.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjson_glib_1_0_la_CPPFLAGS) $(CPPFLAGS) $(libjson_glib_1_0_la_CFLAGS) $(CFLAGS) -MT libjson_glib_1_0_la-json-builder.lo -MD -MP -MF $(DEPDIR)/libjson_glib_1_0_la-json-builder.Tpo -c -o libjson_glib_1_0_la-json-builder.lo `test -f 'json-builder.c' || echo '$(srcdir)/'`json-builder.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/libjson_glib_1_0_la-json-builder.Tpo $(DEPDIR)/libjson_glib_1_0_la-json-builder.Plo
#	$(AM_V_CC)source='json-builder.c' object='libjson_glib_1_0_la-json-builder.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjson_glib_1_0_la_CPPFLAGS) $(CPPFLAGS) $(libjson_glib_1_0_la_CFLAGS) $(CFLAGS) -c -o libjson_glib_1_0_la-json-builder.lo `test -f 'json-builder.c' || echo '$(srcdir)/'`json-builder.c

libjson_glib_1_0_la-json-debug.lo: json-debug.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjson_glib_1_0_la_CPPFLAGS) $(CPPFLAGS) $(libjson_glib_1_0_la_CFLAGS) $(CFLAGS) -MT libjson_glib_1_0_la-json-debug.lo -MD -MP -MF $(DEPDIR)/libjson_glib_1_0_la-json-debug.Tpo -c -o libjson_glib_1_0_la-json-debug.lo `test -f 'json-debug.c' || echo '$(srcdir)/'`json-debug.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/libjson_glib_1_0_la-json-debug.Tpo $(DEPDIR)/libjson_glib_1_0_la-json-debug.Plo
#	$(AM_V_CC)source='json-debug.c' object='libjson_glib_1_0_la-json-debug.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjson_glib_1_0_la_CPPFLAGS) $(CPPFLAGS) $(libjson_glib_1_0_la_CFLAGS) $(CFLAGS) -c -o libjson_glib_1_0_la-json-debug.lo `test -f 'json-debug.c' || echo '$(srcdir)/'`json-debug.c

libjson_glib_1_0_la-json-gboxed.lo: json-gboxed.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjson_glib_1_0_la_CPPFLAGS) $(CPPFLAGS) $(libjson_glib_1_0_la_CFLAGS) $(CFLAGS) -MT libjson_glib_1_0_la-json-gboxed.lo -MD -MP -MF $(DEPDIR)/libjson_glib_1_0_la-json-gboxed.Tpo -c -o libjson_glib_1_0_la-json-gboxed.lo `test -f 'json-gboxed.c' || echo '$(srcdir)/'`json-gboxed.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/libjson_glib_1_0_la-json-gboxed.Tpo $(DEPDIR)/libjson_glib_1_0_la-json-gboxed.Plo
#	$(AM_V_CC)source='json-gboxed.c' object='libjson_glib_1_0_la-json-gboxed.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjson_glib_1_0_la_CPPFLAGS) $(CPPFLAGS) $(libjson_glib_1_0_la_CFLAGS) $(CFLAGS) -c -o libjson_glib_1_0_la-json-gboxed.lo `test -f 'json-gboxed.c' || echo '$(srcdir)/'`json-gboxed.c

libjson_glib_1_0_la-json-generator.lo: json-generator.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjson_glib_1_0_la_CPPFLAGS) $(CPPFLAGS) $(libjson_glib_1_0_la_CFLAGS) $(CFLAGS) -MT libjson_glib_1_0_la-json-generator.lo -MD -MP -MF $(DEPDIR)/libjson_glib_1_0_la-json-generator.Tpo -c -o libjson_glib_1_0_la-json-generator.lo `test -f 'json-generator.c' || echo '$(srcdir)/'`json-generator.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/libjson_glib_1_0_la-json-generator.Tpo $(DEPDIR)/libjson_glib_1_0_la-json-generator.Plo
#	$(AM_V_CC)source='json-generator.c' object='libjson_glib_1_0_la-json-generator.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjson_glib_1_0_la_CPPFLAGS) $(CPPFLAGS) $(libjson_glib_1_0_la_CFLAGS) $(CFLAGS) -c -o libjson_glib_1_0_la-json-generator.lo `test -f 'json-generator.c' || echo '$(srcdir)/'`json-generator.c

libjson_glib_1_0_la-json-gobject.lo: json-gobject.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjson_glib_1_0_la_CPPFLAGS) $(CPPFLAGS) $(libjson_glib_1_0_la_CFLAGS) $(CFLAGS) -MT libjson_glib_1_0_la-json-gobject.lo -MD -MP -MF $(DEPDIR)/libjson_glib_1_0_la-json-gobject.Tpo -c -o libjson_glib_1_0_la-json-gobject.lo `test -f 'json-gobject.c' || echo '$(srcdir)/'`json-gobject.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/libjson_glib_1_0_la-json-gobject.Tpo $(DEPDIR)/libjson_glib_1_0_la-json-gobject.Plo
#	$(AM_V_CC)source='json-gobject.c' object='libjson_glib_1_0_la-json-gobject.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjson_glib_1_0_la_CPPFLAGS) $(CPPFLAGS) $(libjson_glib_1_0_la_CFLAGS) $(CFLAGS) -c -o libjson_glib_1_0_la-json-gobject.lo `test -f 'json-gobject.c' || echo '$(srcdir)/'`json-gobject.c

libjson_glib_1_0_la-json-gvariant.lo: json-gvariant.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjson_glib_1_0_la_CPPFLAGS) $(CPPFLAGS) $(libjson_glib_1_0_la_CFLAGS) $(CFLAGS) -MT libjson_glib_1_0_la-json-gvariant.lo -MD -MP -MF $(DEPDIR)/libjson_glib_1_0_la-json-gvariant.Tpo -c -o libjson_glib_1_0_la-json-gvariant.lo `test -f 'json-gvariant.c' || echo '$(srcdir)/'`json-gvariant.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/libjson_glib_1_0_la-json-gvariant.Tpo $(DEPDIR)/libjson_glib_1_0_la-json-gvariant.Plo
#	$(AM_V_CC)source='json-gvariant.c' object='libjson_glib_1_0_la-json-gvariant.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjson_glib_1_0_la_CPPFLAGS) $(CPPFLAGS) $(libjson_glib_1_0_la_CFLAGS) $(CFLAGS) -c -o libjson_glib_1_0_la-json-gvariant.lo `test -f 'json-gvariant.c' || echo '$(srcdir)/'`json-gvariant.c

libjson_glib_1_0_la-json-node.lo: json-node.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjson_glib_1_0_la_CPPFLAGS) $(CPPFLAGS) $(libjson_glib_1_0_la_CFLAGS) $(CFLAGS) -MT libjson_glib_1_0_la-json-node.lo -MD -MP -MF $(DEPDIR)/libjson_glib_1_0_la-json-node.Tpo -c -o libjson_glib_1_0_la-json-node.lo `test -f 'json-node.c' || echo '$(srcdir)/'`json-node.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/libjson_glib_1_0_la-json-node.Tpo $(DEPDIR)/libjson_glib_1_0_la-json-node.Plo
#	$(AM_V_CC)source='json-node.c' object='libjson_glib_1_0_la-json-node.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjson_glib_1_0_la_CPPFLAGS) $(CPPFLAGS) $(libjson_glib_1_0_la_CFLAGS) $(CFLAGS) -c -o libjson_glib_1_0_la-json-node.lo `test -f 'json-node.c' || echo '$(srcdir)/'`json-node.c

libjson_glib_1_0_la-json-object.lo: json-object.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjson_glib_1_0_la_CPPFLAGS) $(CPPFLAGS) $(libjson_glib_1_0_la_CFLAGS) $(CFLAGS) -MT libjson_glib_1_0_la-json-object.lo -MD -MP -MF $(DEPDIR)/libjson_glib_1_0_la-json-object.Tpo -c -o libjson_glib_1_0_la-json-object.lo `test -f 'json-object.c' || echo '$(srcdir)/'`json-object.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/libjson_glib_1_0_la-json-object.Tpo $(DEPDIR)/libjson_glib_1_0_la-json-object.Plo
#	$(AM_V_CC)source='json-object.c' object='libjson_glib_1_0_la-json-object.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjson_glib_1_0_la_CPPFLAGS) $(CPPFLAGS) $(libjson_glib_1_0_la_CFLAGS) $(CFLAGS) -c -o libjson_glib_1_0_la-json-object.lo `test -f 'json-object.c' || echo '$(srcdir)/'`json-object.c

libjson_glib_1_0_la-json-parser.lo: json-parser.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjson_glib_1_0_la_CPPFLAGS) $(CPPFLAGS) $(libjson_glib_1_0_la_CFLAGS) $(CFLAGS) -MT libjson_glib_1_0_la-json-parser.lo -MD -MP -MF $(DEPDIR)/libjson_glib_1_0_la-json-parser.Tpo -c -o libjson_glib_1_0_la-json-parser.lo `test -f 'json-parser.c' || echo '$(srcdir)/'`json-parser.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/libjson_glib_1_0_la-json-parser.Tpo $(DEPDIR)/libjson_glib_1_0_la-json-parser.Plo
#	$(AM_V_CC)source='json-parser.c' object='libjson_glib_1_0_la-json-parser.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjson_glib_1_0_la_CPPFLAGS) $(CPPFLAGS) $(libjson_glib_1_0_la_CFLAGS) $(CFLAGS) -c -o libjson_glib_1_0_la-json-parser.lo `test -f 'json-parser.c' || echo '$(srcdir)/'`json-parser.c

libjson_glib_1_0_la-json-path.lo: json-path.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjson_glib_1_0_la_CPPFLAGS) $(CPPFLAGS) $(libjson_glib_1_0_la_CFLAGS) $(CFLAGS) -MT libjson_glib_1_0_la-json-path.lo -MD -MP -MF $(DEPDIR)/libjson_glib_1_0_la-json-path.Tpo -c -o libjson_glib_1_0_la-json-path.lo `test -f 'json-path.c' || echo '$(srcdir)/'`json-path.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/libjson_glib_1_0_la-json-path.Tpo $(DEPDIR)/libjson_glib_1_0_la-json-path.Plo
#	$(AM_V_CC)source='json-path.c' object='libjson_glib_1_0_la-json-path.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjson_glib_1_0_la_CPPFLAGS) $(CPPFLAGS) $(libjson_glib_1_0_la_CFLAGS) $(CFLAGS) -c -o libjson_glib_1_0_la-json-path.lo `test -f 'json-path.c' || echo '$(srcdir)/'`json-path.c

libjson_glib_1_0_la-json-reader.lo: json-reader.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjson_glib_1_0_la_CPPFLAGS) $(CPPFLAGS) $(libjson_glib_1_0_la_CFLAGS) $(CFLAGS) -MT libjson_glib_1_0_la-json-reader.lo -MD -MP -MF $(DEPDIR)/libjson_glib_1_0_la-json-reader.Tpo -c -o libjson_glib_1_0_la-json-reader.lo `test -f 'json-reader.c' || echo '$(srcdir)/'`json-reader.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/libjson_glib_1_0_la-json-reader.Tpo $(DEPDIR)/libjson_glib_1_0_la-json-reader.Plo
#	$(AM_V_CC)source='json-reader.c' object='libjson_glib_1_0_la-json-reader.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjson_glib_1_0_la_CPPFLAGS) $(CPPFLAGS) $(libjson_glib_1_0_la_CFLAGS) $(CFLAGS) -c -o libjson_glib_1_0_la-json-reader.lo `test -f 'json-reader.c' || echo '$(srcdir)/'`json-reader.c

libjson_glib_1_0_la-json-scanner.lo: json-scanner.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjson_glib_1_0_la_CPPFLAGS) $(CPPFLAGS) $(libjson_glib_1_0_la_CFLAGS) $(CFLAGS) -MT libjson_glib_1_0_la-json-scanner.lo -MD -MP -MF $(DEPDIR)/libjson_glib_1_0_la-json-scanner.Tpo -c -o libjson_glib_1_0_la-json-scanner.lo `test -f 'json-scanner.c' || echo '$(srcdir)/'`json-scanner.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/libjson_glib_1_0_la-json-scanner.Tpo $(DEPDIR)/libjson_glib_1_0_la-json-scanner.Plo
#	$(AM_V_CC)source='json-scanner.c' object='libjson_glib_1_0_la-json-scanner.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjson_glib_1_0_la_CPPFLAGS) $(CPPFLAGS) $(libjson_glib_1_0_la_CFLAGS) $(CFLAGS) -c -o libjson_glib_1_0_la-json-scanner.lo `test -f 'json-scanner.c' || echo '$(srcdir)/'`json-scanner.c

libjson_glib_1_0_la-json-serializable.lo: json-serializable.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjson_glib_1_0_la_CPPFLAGS) $(CPPFLAGS) $(libjson_glib_1_0_la_CFLAGS) $(CFLAGS) -MT libjson_glib_1_0_la-json-serializable.lo -MD -MP -MF $(DEPDIR)/libjson_glib_1_0_la-json-serializable.Tpo -c -o libjson_glib_1_0_la-json-serializable.lo `test -f 'json-serializable.c' || echo '$(srcdir)/'`json-serializable.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/libjson_glib_1_0_la-json-serializable.Tpo $(DEPDIR)/libjson_glib_1_0_la-json-serializable.Plo
#	$(AM_V_CC)source='json-serializable.c' object='libjson_glib_1_0_la-json-serializable.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjson_glib_1_0_la_CPPFLAGS) $(CPPFLAGS) $(libjson_glib_1_0_la_CFLAGS) $(CFLAGS) -c -o libjson_glib_1_0_la-json-serializable.lo `test -f 'json-serializable.c' || echo '$(srcdir)/'`json-serializable.c

libjson_glib_1_0_la-json-utils.lo: json-utils.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjson_glib_1_0_la_CPPFLAGS) $(CPPFLAGS) $(libjson_glib_1_0_la_CFLAGS) $(CFLAGS) -MT libjson_glib_1_0_la-json-utils.lo -MD -MP -MF $(DEPDIR)/libjson_glib_1_0_la-json-utils.Tpo -c -o libjson_glib_1_0_la-json-utils.lo `test -f 'json-utils.c' || echo '$(srcdir)/'`json-utils.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/libjson_glib_1_0_la-json-utils.Tpo $(DEPDIR)/libjson_glib_1_0_la-json-utils.Plo
#	$(AM_V_CC)source='json-utils.c' object='libjson_glib_1_0_la-json-utils.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjson_glib_1_0_la_CPPFLAGS) $(CPPFLAGS) $(libjson_glib_1_0_la_CFLAGS) $(CFLAGS) -c -o libjson_glib_1_0_la-json-utils.lo `test -f 'json-utils.c' || echo '$(srcdir)/'`json-utils.c

libjson_glib_1_0_la-json-value.lo: json-value.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjson_glib_1_0_la_CPPFLAGS) $(CPPFLAGS) $(libjson_glib_1_0_la_CFLAGS) $(CFLAGS) -MT libjson_glib_1_0_la-json-value.lo -MD -MP -MF $(DEPDIR)/libjson_glib_1_0_la-json-value.Tpo -c -o libjson_glib_1_0_la-json-value.lo `test -f 'json-value.c' || echo '$(srcdir)/'`json-value.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/libjson_glib_1_0_la-json-value.Tpo $(DEPDIR)/libjson_glib_1_0_la-json-value.Plo
#	$(AM_V_CC)source='json-value.c' object='libjson_glib_1_0_la-json-value.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjson_glib_1_0_la_CPPFLAGS) $(CPPFLAGS) $(libjson_glib_1_0_la_CFLAGS) $(CFLAGS) -c -o libjson_glib_1_0_la-json-value.lo `test -f 'json-value.c' || echo '$(srcdir)/'`json-value.c

libjson_glib_1_0_la-json-enum-types.lo: json-enum-types.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjson_glib_1_0_la_CPPFLAGS) $(CPPFLAGS) $(libjson_glib_1_0_la_CFLAGS) $(CFLAGS) -MT libjson_glib_1_0_la-json-enum-types.lo -MD -MP -MF $(DEPDIR)/libjson_glib_1_0_la-json-enum-types.Tpo -c -o libjson_glib_1_0_la-json-enum-types.lo `test -f 'json-enum-types.c' || echo '$(srcdir)/'`json-enum-types.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/libjson_glib_1_0_la-json-enum-types.Tpo $(DEPDIR)/libjson_glib_1_0_la-json-enum-types.Plo
#	$(AM_V_CC)source='json-enum-types.c' object='libjson_glib_1_0_la-json-enum-types.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjson_glib_1_0_la_CPPFLAGS) $(CPPFLAGS) $(libjson_glib_1_0_la_CFLAGS) $(CFLAGS) -c -o libjson_glib_1_0_la-json-enum-types.lo `test -f 'json-enum-types.c' || echo '$(srcdir)/'`json-enum-types.c

json_glib_format-json-glib-format.o: json-glib-format.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(json_glib_format_CPPFLAGS) $(CPPFLAGS) $(json_glib_format_CFLAGS) $(CFLAGS) -MT json_glib_format-json-glib-format.o -MD -MP -MF $(DEPDIR)/json_glib_format-json-glib-format.Tpo -c -o json_glib_format-json-glib-format.o `test -f 'json-glib-format.c' || echo '$(srcdir)/'`json-glib-format.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/json_glib_format-json-glib-format.Tpo $(DEPDIR)/json_glib_format-json-glib-format.Po
#	$(AM_V_CC)source='json-glib-format.c' object='json_glib_format-json-glib-format.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(json_glib_format_CPPFLAGS) $(CPPFLAGS) $(json_glib_format_CFLAGS) $(CFLAGS) -c -o json_glib_format-json-glib-format.o `test -f 'json-glib-format.c' || echo '$(srcdir)/'`json-glib-format.c

json_glib_format-json-glib-format.obj: json-glib-format.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(json_glib_format_CPPFLAGS) $(CPPFLAGS) $(json_glib_format_CFLAGS) $(CFLAGS) -MT json_glib_format-json-glib-format.obj -MD -MP -MF $(DEPDIR)/json_glib_format-json-glib-format.Tpo -c -o json_glib_format-json-glib-format.obj `if test -f 'json-glib-format.c'; then $(CYGPATH_W) 'json-glib-format.c'; else $(CYGPATH_W) '$(srcdir)/json-glib-format.c'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/json_glib_format-json-glib-format.Tpo $(DEPDIR)/json_glib_format-json-glib-format.Po
#	$(AM_V_CC)source='json-glib-format.c' object='json_glib_format-json-glib-format.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(json_glib_format_CPPFLAGS) $(CPPFLAGS) $(json_glib_format_CFLAGS) $(CFLAGS) -c -o json_glib_format-json-glib-format.obj `if test -f 'json-glib-format.c'; then $(CYGPATH_W) 'json-glib-format.c'; else $(CYGPATH_W) '$(srcdir)/json-glib-format.c'; fi`

json_glib_validate-json-glib-validate.o: json-glib-validate.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(json_glib_validate_CPPFLAGS) $(CPPFLAGS) $(json_glib_validate_CFLAGS) $(CFLAGS) -MT json_glib_validate-json-glib-validate.o -MD -MP -MF $(DEPDIR)/json_glib_validate-json-glib-validate.Tpo -c -o json_glib_validate-json-glib-validate.o `test -f 'json-glib-validate.c' || echo '$(srcdir)/'`json-glib-validate.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/json_glib_validate-json-glib-validate.Tpo $(DEPDIR)/json_glib_validate-json-glib-validate.Po
#	$(AM_V_CC)source='json-glib-validate.c' object='json_glib_validate-json-glib-validate.o' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(json_glib_validate_CPPFLAGS) $(CPPFLAGS) $(json_glib_validate_CFLAGS) $(CFLAGS) -c -o json_glib_validate-json-glib-validate.o `test -f 'json-glib-validate.c' || echo '$(srcdir)/'`json-glib-validate.c

json_glib_validate-json-glib-validate.obj: json-glib-validate.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(json_glib_validate_CPPFLAGS) $(CPPFLAGS) $(json_glib_validate_CFLAGS) $(CFLAGS) -MT json_glib_validate-json-glib-validate.obj -MD -MP -MF $(DEPDIR)/json_glib_validate-json-glib-validate.Tpo -c -o json_glib_validate-json-glib-validate.obj `if test -f 'json-glib-validate.c'; then $(CYGPATH_W) 'json-glib-validate.c'; else $(CYGPATH_W) '$(srcdir)/json-glib-validate.c'; fi`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/json_glib_validate-json-glib-validate.Tpo $(DEPDIR)/json_glib_validate-json-glib-validate.Po
#	$(AM_V_CC)source='json-glib-validate.c' object='json_glib_validate-json-glib-validate.obj' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(json_glib_validate_CPPFLAGS) $(CPPFLAGS) $(json_glib_validate_CFLAGS) $(CFLAGS) -c -o json_glib_validate-json-glib-validate.obj `if test -f 'json-glib-validate.c'; then $(CYGPATH_W) 'json-glib-validate.c'; else $(CYGPATH_W) '$(srcdir)/json-glib-validate.c'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-dist_girDATA: $(dist_gir_DATA)
	@$(NORMAL_INSTALL)
	@list='$(dist_gir_DATA)'; test -n "$(girdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(girdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(girdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(girdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(girdir)" || exit $$?; \
	done

uninstall-dist_girDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_gir_DATA)'; test -n "$(girdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(girdir)'; $(am__uninstall_files_from_dir)
install-jsonincludeDATA: $(jsoninclude_DATA)
	@$(NORMAL_INSTALL)
	@list='$(jsoninclude_DATA)'; test -n "$(jsonincludedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(jsonincludedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(jsonincludedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(jsonincludedir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(jsonincludedir)" || exit $$?; \
	done

uninstall-jsonincludeDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(jsoninclude_DATA)'; test -n "$(jsonincludedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(jsonincludedir)'; $(am__uninstall_files_from_dir)
install-pkgconfigDATA: $(pkgconfig_DATA)
	@$(NORMAL_INSTALL)
	@list='$(pkgconfig_DATA)'; test -n "$(pkgconfigdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(pkgconfigdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(pkgconfigdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(pkgconfigdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(pkgconfigdir)" || exit $$?; \
	done

uninstall-pkgconfigDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(pkgconfig_DATA)'; test -n "$(pkgconfigdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(pkgconfigdir)'; $(am__uninstall_files_from_dir)
install-typelibsDATA: $(typelibs_DATA)
	@$(NORMAL_INSTALL)
	@list='$(typelibs_DATA)'; test -n "$(typelibsdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(typelibsdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(typelibsdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(typelibsdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(typelibsdir)" || exit $$?; \
	done

uninstall-typelibsDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(typelibs_DATA)'; test -n "$(typelibsdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(typelibsdir)'; $(am__uninstall_files_from_dir)

# This directory's subdirectories are mostly independent; you can cd
# into them and run 'make' without going through this Makefile.
# To change the values of 'make' variables: instead of editing Makefiles,
# (1) if the variable is set in 'config.status', edit 'config.status'
#     (which will cause the Makefiles to be regenerated when you run 'make');
# (2) otherwise, pass the desired values on the 'make' command line.
$(am__recursive_targets):
	@fail=; \
	if $(am__make_keepgoing); then \
	  failcom='fail=yes'; \
	else \
	  failcom='exit 1'; \
	fi; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-recursive
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-recursive

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-recursive

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    $(am__make_dryrun) \
	      || test -d "$(distdir)/$$subdir" \
	      || $(MKDIR_P) "$(distdir)/$$subdir" \
	      || exit 1; \
	    dir1=$$subdir; dir2="$(distdir)/$$subdir"; \
	    $(am__relativize); \
	    new_distdir=$$reldir; \
	    dir1=$$subdir; dir2="$(top_distdir)"; \
	    $(am__relativize); \
	    new_top_distdir=$$reldir; \
	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\"; \
	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \
	    ($(am__cd) $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$new_top_distdir" \
	        distdir="$$new_distdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
		am__skip_mode_fix=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
	$(MAKE) $(AM_MAKEFLAGS) \
	  top_distdir="$(top_distdir)" distdir="$(distdir)" \
	  dist-hook
check-am: all-am
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-recursive
all-am: Makefile $(LTLIBRARIES) $(PROGRAMS) $(DATA) config.h
install-binPROGRAMS: install-libLTLIBRARIES

installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" "$(DESTDIR)$(girdir)" "$(DESTDIR)$(jsonincludedir)" "$(DESTDIR)$(pkgconfigdir)" "$(DESTDIR)$(typelibsdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-recursive

clean-am: clean-binPROGRAMS clean-generic clean-libLTLIBRARIES \
	clean-libtool mostlyclean-am

distclean: distclean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-hdr distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

html-am:

info: info-recursive

info-am:

install-data-am: install-dist_girDATA install-jsonincludeDATA \
	install-pkgconfigDATA install-typelibsDATA

install-dvi: install-dvi-recursive

install-dvi-am:

install-exec-am: install-binPROGRAMS install-libLTLIBRARIES

install-html: install-html-recursive

install-html-am:

install-info: install-info-recursive

install-info-am:

install-man:

install-pdf: install-pdf-recursive

install-pdf-am:

install-ps: install-ps-recursive

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-dist_girDATA \
	uninstall-jsonincludeDATA uninstall-libLTLIBRARIES \
	uninstall-pkgconfigDATA uninstall-typelibsDATA

.MAKE: $(am__recursive_targets) all check install install-am \
	install-strip

.PHONY: $(am__recursive_targets) CTAGS GTAGS TAGS all all-am check \
	check-am clean clean-binPROGRAMS clean-generic \
	clean-libLTLIBRARIES clean-libtool cscopelist-am ctags \
	ctags-am dist-hook distclean distclean-compile \
	distclean-generic distclean-hdr distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-binPROGRAMS install-data \
	install-data-am install-dist_girDATA install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am \
	install-jsonincludeDATA install-libLTLIBRARIES install-man \
	install-pdf install-pdf-am install-pkgconfigDATA install-ps \
	install-ps-am install-strip install-typelibsDATA installcheck \
	installcheck-am installdirs installdirs-am maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags tags-am uninstall uninstall-am uninstall-binPROGRAMS \
	uninstall-dist_girDATA uninstall-jsonincludeDATA \
	uninstall-libLTLIBRARIES uninstall-pkgconfigDATA \
	uninstall-typelibsDATA

.PRECIOUS: Makefile


# Basic sanity checks
$(if $(GLIB_MKENUMS),,$(error Need to define GLIB_MKENUMS))

$(if $(or $(glib_enum_h), \
          $(glib_enum_c)),, \
    $(error Need to define glib_enum_h and glib_enum_c))

$(if $(glib_enum_headers),,$(error Need to define glib_enum_headers))

stamp-enum-types: $(enum_headers) $(enum_tmpl_h)
	$(AM_V_GEN)$(GLIB_MKENUMS) \
		--template $(enum_tmpl_h) \
	$(enum_headers) > xgen-eh \
	&& (cmp -s xgen-eh $(glib_enum_h) || cp -f xgen-eh $(glib_enum_h)) \
	&& rm -f xgen-eh \
	&& echo timestamp > $(@F)

$(glib_enum_h): stamp-enum-types
	@true

$(glib_enum_c): $(enum_headers) $(enum_tmpl_h) $(enum_tmpl_c)
	$(AM_V_GEN)$(GLIB_MKENUMS) \
		--template $(enum_tmpl_c) \
	$(enum_headers) > xgen-ec \
	&& cp -f xgen-ec $(glib_enum_c) \
	&& rm -f xgen-ec

json-glib-1.0.pc: json-glib.pc
	$(AM_V_GEN)cp -f $< $@

# intospection
-include $(INTROSPECTION_MAKEFILE)

#Json-1.0.gir: libjson-glib-1.0.la Makefile

#
# Creates Visual Studio 2008/2010 projects from items passed in from autotools files
# $(1) - Base Name of the MSVC project files (outputs)
#

define msvcproj-builder

$(top_builddir)/build/win32/vs10/$(1).vcxproj: $(top_builddir)/build/win32/vs9/$(1).vcproj
$(top_builddir)/build/win32/vs10/$(1).vcxproj.filters: $(top_builddir)/build/win32/vs9/$(1).vcproj
$(1).sourcefiles: $(top_builddir)/build/win32/vs9/$(1).vcproj
$(1).vs10.sourcefiles: $(top_builddir)/build/win32/vs9/$(1).vcproj
$(1).vs10.sourcefiles.filters: $(top_builddir)/build/win32/vs9/$(1).vcproj

$(top_builddir)/build/win32/vs9/$(1).vcproj: Makefile
	-$(RM) $(top_builddir)/build/win32/vs9/$(1).vcproj
	-$(RM) $(top_builddir)/build/win32/vs10/$(1).vcxproj
	-$(RM) $(top_builddir)/build/win32/vs10/$(1).vcxproj.filters
	-$(RM) $(top_builddir)/build/win32/vs11/$(1).vcxproj
	-$(RM) $(top_builddir)/build/win32/vs11/$(1).vcxproj.filters
	-$(RM) $(top_builddir)/build/win32/vs12/$(1).vcxproj
	-$(RM) $(top_builddir)/build/win32/vs12/$(1).vcxproj.filters
	-$(RM) $(top_builddir)/build/win32/vs14/$(1).vcxproj
	-$(RM) $(top_builddir)/build/win32/vs14/$(1).vcxproj.filters
	-$(RM) $(top_builddir)/build/win32/vs15/$(1).vcxproj
	-$(RM) $(top_builddir)/build/win32/vs15/$(1).vcxproj.filters

	for F in $(_proj_files); do \
		case $$$$F in \
		$(_proj_filters)) \
			;; \
		*.c|*.cpp|*.cc|*.cxx) \
			echo '   <File RelativePath="..\..\..'$(_proj_subdir)$$$$F'" />' >>$(1).sourcefiles && \
			echo '   <ClCompile Include="..\..\..'$(_proj_subdir)$$$$F'" />' >>$(1).vs10.sourcefiles && \
			echo '   <ClCompile Include="..\..\..'$(_proj_subdir)$$$$F'"><Filter>Source Files</Filter></ClCompile>' >>$(1).vs10.sourcefiles.filters \
			;; \
		esac;	\
	done

	$(CPP) -P - <$(top_srcdir)/build/win32/vs9/$(1).vcprojin >$(top_builddir)/build/win32/vs9/$(1).vcproj
	$(CPP) -P - <$(top_srcdir)/build/win32/vs10/$(1).vcxprojin >$(top_builddir)/build/win32/vs10/$(1).vcxproj
	$(CPP) -P - <$(top_srcdir)/build/win32/vs10/$(1).vcxproj.filtersin >$(top_builddir)/build/win32/vs10/$(1).vcxproj.filters
	$(RM) $(1).sourcefiles
	$(RM) $(1).vs10.sourcefiles
	$(RM) $(1).vs10.sourcefiles.filters

$(top_builddir)/build/win32/vs10/$(1).vs10.headers: $(top_builddir)/build/win32/vs9/$(1).headers

$(top_builddir)/build/win32/vs9/$(1).headers: Makefile
	-$(RM) $(top_builddir)/build/win32/vs9/$(1).headers
	-$(RM) $(top_builddir)/build/win32/vs10/$(1).vs10.headers

	for F in $(_proj_headers); do \
		case $$$$F in \
		$(_proj_headers_excludes)) \
			;; \
		*.h|*.hpp|*.hh|*.hxx) \
			echo 'copy ..\..\..'$(_proj_subdir)$$$$F' $$$$(CopyDir)\include'$(_headers_destdir)'\'$$$$F'&#x0D;&#x0A;' >>$(top_builddir)/build/win32/vs9/$(1).headers && \
			echo 'copy ..\..\..'$(_proj_subdir)$$$$F' $$$$(CopyDir)\include'$(_headers_destdir)'\'$$$$F >>$(top_builddir)/build/win32/vs10/$(1).vs10.headers \
			;; \
		esac;	\
	done

endef

$(foreach proj,$(MSVCPROJS),$(eval $(call msvcproj-builder,$(proj))))

#
# Create NMake Makefile Sections for Building Introspection files
# from autotools files
# $(1) - File Name of the .gir that is to be generated
#

#define gir-nmake-builder

# Basic sanity check, to make sure required variables are set
#$(if $($(_gir_name)_MSVC_FILES),,$(error Need to define $(_gir_name)_MSVC_FILES))
#$(if $(or $(findstring --header-only,$($(_gir_name)_MSVC_SCANNERFLAGS)),
#          $($(_gir_name)_MSVC_LIBS),
#          $($(_gir_name)_MSVC_PROGRAM)),,
#    $(error Need to define $(_gir_name)_MSVC_LIBS or $(_gir_name)_MSVC_PROGRAM))

#$(top_builddir)/build/win32/$(_gir_name)_list:
#	for F in $(_gir_files_msvc); do \
#		case $$$$F in \
#		*.c|*.cpp|*.cc|*.cxx|*.h|*.hpp|*.hh|*.hxx) \
#			echo '..\..'$(_gir_source_subdir_msvc)$$$$F >>$(top_builddir)/build/win32/$(_gir_name)_list \
#			;; \
#		esac; \
#	done

#$(top_builddir)/build/win32/$(1).msvc.introspect:
#	-$(RM) $(top_builddir)/build/win32/$(1).msvc.introspect

# Assemble the Command to Run g-ir-scanner
#	echo $(1)': '$(_gir_name)'_list '$($(_gir_name)_MSVC_GIR_DEPS)>>$(top_builddir)/build/win32/$(1).msvc.introspect
#	echo '	@-echo Generating $$$$@...'>>$(top_builddir)/build/win32/$(1).msvc.introspect
#	echo '	$$$$(PYTHON) $$$$(G_IR_SCANNER)	\'>>$(top_builddir)/build/win32/$(1).msvc.introspect
#	echo '	--verbose -no-libtool	\'>>$(top_builddir)/build/win32/$(1).msvc.introspect
#	echo '	--namespace='$(_gir_namespace_msvc)'	\'>>$(top_builddir)/build/win32/$(1).msvc.introspect
#	echo '	--nsversion='$(_gir_version_msvc)'	\'>>$(top_builddir)/build/win32/$(1).msvc.introspect
#	echo '	'$(_gir_packages_msvc)'	\'>>$(top_builddir)/build/win32/$(1).msvc.introspect
#	echo '	'$(_gir_libraries_msvc)'	\'>>$(top_builddir)/build/win32/$(1).msvc.introspect
#	echo '	'$(_gir_program_msvc)'	\'>>$(top_builddir)/build/win32/$(1).msvc.introspect
#	echo '	--add-include-path=$$$$(G_IR_INCLUDEDIR)	\'>>$(top_builddir)/build/win32/$(1).msvc.introspect
#	echo '	'$(_gir_includes_msvc)'	\'>>$(top_builddir)/build/win32/$(1).msvc.introspect
#	echo '	'$(_gir_export_packages_msvc)'	\'>>$(top_builddir)/build/win32/$(1).msvc.introspect
#	echo '	--cflags-begin	\'>>$(top_builddir)/build/win32/$(1).msvc.introspect
#	echo '	'$($(_gir_name)_MSVC_CFLAGS)'	\'>>$(top_builddir)/build/win32/$(1).msvc.introspect
#	echo '	--cflags-end	\'>>$(top_builddir)/build/win32/$(1).msvc.introspect
#	echo '	'$($(_gir_name)_MSVC_SCANNERFLAGS)'	\'>>$(top_builddir)/build/win32/$(1).msvc.introspect
#	echo '	--filelist='$(_gir_name)'_list	\'>>$(top_builddir)/build/win32/$(1).msvc.introspect
#	echo '	-o $$$$@'>>$(top_builddir)/build/win32/$(1).msvc.introspect
#	echo '' >>$(top_builddir)/build/win32/$(1).msvc.introspect

# Finally Assemble the Command to Compile the generated .gir
#	echo '$(_typelib_basename_msvc).typelib: '$(_typelib_basename_msvc)'.gir'>>$(top_builddir)/build/win32/$(1).msvc.introspect
#	echo '	@-echo Compiling $$$$@...'>>$(top_builddir)/build/win32/$(1).msvc.introspect
#	echo '	$$$$(G_IR_COMPILER)	\'>>$(top_builddir)/build/win32/$(1).msvc.introspect
#	echo '	--includedir=. --debug --verbose	\'>>$(top_builddir)/build/win32/$(1).msvc.introspect
#	echo '	'$(1)'	\'>>$(top_builddir)/build/win32/$(1).msvc.introspect
#	echo '	-o $$$$@'>>$(top_builddir)/build/win32/$(1).msvc.introspect
#	echo '' >>$(top_builddir)/build/win32/$(1).msvc.introspect
#endef

#$(foreach gir,$(MSVC_INTROSPECT_GIRS),$(eval $(call gir-nmake-builder,$(gir))))

dist-hook:	\
	$(top_builddir)/build/win32/vs9/json-glib.vcproj		\
	$(top_builddir)/build/win32/vs9/json-glib.headers	\
	$(NMAKE_INTROSPECTION_FILES)

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
