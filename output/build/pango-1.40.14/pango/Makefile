# Makefile.in generated by automake 1.15.1 from Makefile.am.
# pango/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2017 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# Author: Fan, Chun-wei
# Common Autotools file used to generate Visual Studio 2008+
# Projects from their templates

# This autotools file, from GLib, can be used in other projects
# that have Visual Studio build support.

# * Input variables:
#
#   MSVCPROJS - List of Projects that should be generated
#
# * Simple tutorial
#
# Add this to Makefile.am where your library/program is built:
#   include <this Makefile.msvcproj>
#   MSVCPROJS = YourProject (can be multiple projects in a single srcdir)
#   YourProject_FILES = $(libyourlib_1_0_SOURCES)
#   YourProject_EXCLUDES = ... # list of sources to exclude, separated by '|', wildcards allowed; use random unsed value if none
#   (the following 3 lines if headers need to be installed)
#   YourProject_HEADERS_DIR = $(libyourlibincludedir)
#   YourProject_HEADERS_INST = $(libyourlib_1_0_HEADERS)
#   YourProject_HEADERS_EXCLUDES = ... # <list of headers to exclude from installation, separated by '|', wildcards allowed; use random unsed value if none>
#
#   dist-hook: \ # (or add to it if it is already there, note the vs9 items will also call the vs10 items in the process)
#   	$(top_builddir)/win32/vs9/YourProject.vcproj	\
#   	$(top_builddir)/win32/vs9/YourProject.headers	# if headers need to be installed
#
#   --or, if Visual Studio 2013 or later is required--
#   dist-hook: \ # (or add to it if it is already there, this does -not- call other vs items in the process)
#	$(top_builddir)/win32/vs12/YourProject.vcxproj	\
#	$(top_builddir)/win32/vs12/YourProject.vs12.headers	# if headers need to be installed

# Private functions

# Author: Fan, Chun-wei
# Common autotools file for constructing the g-ir-scanner and
# g-ir-compiler command lines for Visual Studio builds.

# This is copied from $(srcroot)/win32 from the gobject-introspection
# project, which may be included in projects that support both
# Visual Studio builds and introspection.

# * Input variables:
#
#   MSVC_INTROSPECT_GIRS - List of .gir's that should be built
#                          in the NMake Makefiles
#
# * Simple tutorial
#
# Add this to Makefile.am where your library/program is built:
#   (Either YourLib_1_0_gir_MSVC_LIBS or YourLib_1_0_gir_MSVC_PROGRAM
#    is required unless --headers-only is specified in
#    YourLib_1_0_gir__MSVC_SCANNERFLAGS)
#
#   include <this Makefile.msvc-introspection>
#   MSVC_INTROSPECT_GIRS = YourLib-1.0.gir
#   YourLib_1_0_gir_NAMESPACE = YourLib # This is optional
#   YourLib_1_0_gir_VERSION = 1.0 # This is optional
#   YourLib_1_0_gir_MSVC_LIBS = yourlib-1.0
#   YourLib_1_0_gir_MSVC_FILES = $(libyourlib_1_0_SOURCES)
#   YourLib_1_0_gir_MSVC_PROGRAM = YourProgram
#   YourLib_1_0_gir_MSVC_PACKAGES = (Dependent .pc files)
#   YourLib_1_0_gir_MSVC_INCLUDE_GIRS = (Dependent external .gir's)
#   YourLib_1_0_gir_MSVC_EXPORT_PACKAGES = (Packages exported by this .gir)
#   YourLib_1_0_gir_MSVC_C_INCLUDES = (List of public C headers which need to be included by
#                                      consumers at compile time to make use of the API)

# Private functions




am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/pango
pkgincludedir = $(includedir)/pango
pkglibdir = $(libdir)/pango
pkglibexecdir = $(libexecdir)/pango
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-pc-linux-gnu
host_triplet = arm-buildroot-linux-gnueabihf
#am__append_1 = -Wl,pango-win32-res.o
#am__append_2 = pango-win32-res.o
am__append_3 = freetype2

# ------------------- libpangoft2 -------------------
am__append_4 = $(pangoft2_headers)
am__append_5 = libpangoft2-1.0.la
am__append_6 = PangoFT2-1.0.gir
#am__append_7 = -Wl,pangoft2-win32-res.o
#am__append_8 = pangoft2-win32-res.o

# ------------------- libpangoxft -------------------
#am__append_9 = $(pangoxft_headers)
#am__append_10 = libpangoxft-1.0.la
#am__append_11 = PangoXft-1.0.gir
#am__append_12 = -Wl,pangoxft-win32-res.o
#am__append_13 = pangoxft-win32-res.o

# ------------------- libpangocairo -------------------
am__append_14 = $(pangocairo_headers)
am__append_15 = libpangocairo-1.0.la
am__append_16 = PangoCairo-1.0.gir
##am__append_17 = -Wl,pangocairo-win32-res.o
##am__append_18 = pangocairo-win32-res.o
#am__append_19 = libpangowin32-$(PANGO_API_VERSION).la -lgdi32
#am__append_20 = libpangowin32-$(PANGO_API_VERSION).la
#am__append_21 = pangocairo-win32font.c pangocairo-win32fontmap.c pangocairo-win32.h
am__append_22 = libpangoft2-$(PANGO_API_VERSION).la $(FREETYPE_LIBS)
am__append_23 = libpangoft2-$(PANGO_API_VERSION).la 
am__append_24 = \
	pangocairo-fcfont.c	\
	pangocairo-fcfontmap.c  \
	pangocairo-fc.h

##am__append_25 = \
##	pangocoretext.h		\
##	pangocoretext.c		\
##	pangocoretext-private.h	\
##	pangocoretext-fontmap.c	\
##	pangocoretext-shape.c	\
##	pangocairo-coretext.h	\
##	pangocairo-coretextfont.c	\
##	pangocairo-coretextfont.h	\
##	pangocairo-coretextfontmap.c

##am__append_26 = pangocoretext.h
##am__append_27 = -framework CoreFoundation -framework ApplicationServices
am__append_28 = --include-uninstalled=$(builddir)/$(PANGOCAIRO_FONT_BACKEND_GI_MODULE)
am__append_29 = $(PangoFT2_1_0_gir_LIBS)

# ------------------- libpangowin32 -------------------
#am__append_30 = pangowin32.h
#am__append_31 = libpangowin32-1.0.la
#am__append_32 = -Wl,pangowin32-win32-res.o
#am__append_33 = pangowin32-win32-res.o
subdir = pango
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__pangoinclude_HEADERS_DIST) \
	$(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES = pango.rc pangoft2.rc pangowin32.rc pangocairo.rc \
	pangoxft.rc
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(girdir)" \
	"$(DESTDIR)$(typelibsdir)" "$(DESTDIR)$(pangoincludedir)"
LTLIBRARIES = $(lib_LTLIBRARIES)
am__DEPENDENCIES_1 =
am_libpango_1_0_la_OBJECTS = break.lo ellipsize.lo fonts.lo \
	glyphstring.lo modules.lo pango-attributes.lo \
	pango-bidi-type.lo pango-color.lo pango-context.lo \
	pango-coverage.lo pango-emoji.lo pango-engine.lo \
	pango-fontmap.lo pango-fontset.lo pango-glyph-item.lo \
	pango-gravity.lo pango-item.lo pango-language.lo \
	pango-layout.lo pango-markup.lo pango-matrix.lo \
	pango-renderer.lo pango-script.lo pango-tabs.lo pango-utils.lo \
	reorder-items.lo shape.lo pango-enum-types.lo
libpango_1_0_la_OBJECTS = $(am_libpango_1_0_la_OBJECTS)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
libpango_1_0_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(AM_CFLAGS) $(CFLAGS) $(libpango_1_0_la_LDFLAGS) $(LDFLAGS) \
	-o $@
#am__DEPENDENCIES_2 =  \
#	libpangowin32-$(PANGO_API_VERSION).la
am__DEPENDENCIES_3 =  \
	libpangoft2-$(PANGO_API_VERSION).la \
	$(am__DEPENDENCIES_1)
am__libpangocairo_1_0_la_SOURCES_DIST = pangocairo-context.c \
	pangocairo-font.c pangocairo-fontmap.c pangocairo-render.c \
	pangocairo-private.h pangocairo-win32font.c \
	pangocairo-win32fontmap.c pangocairo-win32.h \
	pangocairo-fcfont.c pangocairo-fcfontmap.c pangocairo-fc.h \
	pangocoretext.h pangocoretext.c pangocoretext-private.h \
	pangocoretext-fontmap.c pangocoretext-shape.c \
	pangocairo-coretext.h pangocairo-coretextfont.c \
	pangocairo-coretextfont.h pangocairo-coretextfontmap.c
am__objects_1 = pangocairo-context.lo pangocairo-font.lo \
	pangocairo-fontmap.lo pangocairo-render.lo
#am__objects_2 = pangocairo-win32font.lo \
#	pangocairo-win32fontmap.lo
am__objects_3 = pangocairo-fcfont.lo \
	pangocairo-fcfontmap.lo
##am__objects_4 =  \
##	pangocoretext.lo \
##	pangocoretext-fontmap.lo \
##	pangocoretext-shape.lo \
##	pangocairo-coretextfont.lo \
##	pangocairo-coretextfontmap.lo
am_libpangocairo_1_0_la_OBJECTS = $(am__objects_1) $(am__objects_2) \
	$(am__objects_3) $(am__objects_4)
libpangocairo_1_0_la_OBJECTS = $(am_libpangocairo_1_0_la_OBJECTS)
libpangocairo_1_0_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(AM_CFLAGS) $(CFLAGS) $(libpangocairo_1_0_la_LDFLAGS) \
	$(LDFLAGS) -o $@
am_libpangocairo_1_0_la_rpath = -rpath $(libdir)
am__objects_5 = pangofc-font.lo pangofc-fontmap.lo pangofc-decoder.lo \
	pangofc-shape.lo pangoft2.lo
am_libpangoft2_1_0_la_OBJECTS = $(am__objects_5) pangoft2-fontmap.lo \
	pangoft2-render.lo pango-ot-buffer.lo pango-ot-info.lo \
	pango-ot-ruleset.lo pango-ot-tag.lo
libpangoft2_1_0_la_OBJECTS = $(am_libpangoft2_1_0_la_OBJECTS)
libpangoft2_1_0_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(AM_CFLAGS) $(CFLAGS) $(libpangoft2_1_0_la_LDFLAGS) \
	$(LDFLAGS) -o $@
am_libpangoft2_1_0_la_rpath = -rpath $(libdir)
am_libpangowin32_1_0_la_OBJECTS = pangowin32.lo \
	pangowin32-fontcache.lo pangowin32-fontmap.lo \
	pangowin32-shape.lo
libpangowin32_1_0_la_OBJECTS = $(am_libpangowin32_1_0_la_OBJECTS)
libpangowin32_1_0_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(AM_CFLAGS) $(CFLAGS) $(libpangowin32_1_0_la_LDFLAGS) \
	$(LDFLAGS) -o $@
#am_libpangowin32_1_0_la_rpath = -rpath $(libdir)
am_libpangoxft_1_0_la_OBJECTS = pangoxft-font.lo pangoxft-fontmap.lo \
	pangoxft-render.lo
libpangoxft_1_0_la_OBJECTS = $(am_libpangoxft_1_0_la_OBJECTS)
libpangoxft_1_0_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(AM_CFLAGS) $(CFLAGS) $(libpangoxft_1_0_la_LDFLAGS) \
	$(LDFLAGS) -o $@
#am_libpangoxft_1_0_la_rpath = -rpath $(libdir)
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(libpango_1_0_la_SOURCES) $(libpangocairo_1_0_la_SOURCES) \
	$(libpangoft2_1_0_la_SOURCES) $(libpangowin32_1_0_la_SOURCES) \
	$(libpangoxft_1_0_la_SOURCES)
DIST_SOURCES = $(libpango_1_0_la_SOURCES) \
	$(am__libpangocairo_1_0_la_SOURCES_DIST) \
	$(libpangoft2_1_0_la_SOURCES) $(libpangowin32_1_0_la_SOURCES) \
	$(libpangoxft_1_0_la_SOURCES)
RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \
	ctags-recursive dvi-recursive html-recursive info-recursive \
	install-data-recursive install-dvi-recursive \
	install-exec-recursive install-html-recursive \
	install-info-recursive install-pdf-recursive \
	install-ps-recursive install-recursive installcheck-recursive \
	installdirs-recursive pdf-recursive ps-recursive \
	tags-recursive uninstall-recursive
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
DATA = $(gir_DATA) $(typelibs_DATA)
am__pangoinclude_HEADERS_DIST = pango.h pango-attributes.h \
	pango-bidi-type.h pango-break.h pango-context.h \
	pango-coverage.h pango-engine.h pango-font.h pango-fontmap.h \
	pango-fontset.h pango-glyph.h pango-glyph-item.h \
	pango-gravity.h pango-item.h pango-language.h pango-layout.h \
	pango-matrix.h pango-modules.h pango-renderer.h pango-script.h \
	pango-tabs.h pango-types.h pango-utils.h \
	pango-version-macros.h pango-features.h pango-enum-types.h \
	pango-ot.h pangofc-font.h pangofc-fontmap.h pangofc-decoder.h \
	pangoft2.h pangoxft.h pangoxft-render.h pangocairo.h \
	pangocoretext.h pangowin32.h
HEADERS = $(pangoinclude_HEADERS)
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
am__recursive_targets = \
  $(RECURSIVE_TARGETS) \
  $(RECURSIVE_CLEAN_TARGETS) \
  $(am__extra_recursive_targets)
AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \
	distdir
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
DIST_SUBDIRS = $(SUBDIRS)
am__DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/pango.rc.in \
	$(srcdir)/pangocairo.rc.in $(srcdir)/pangoft2.rc.in \
	$(srcdir)/pangowin32.rc.in $(srcdir)/pangoxft.rc.in \
	$(top_srcdir)/depcomp \
	$(top_srcdir)/win32/Makefile.msvc-introspection \
	$(top_srcdir)/win32/Makefile.msvcproj
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
am__relativize = \
  dir0=`pwd`; \
  sed_first='s,^\([^/]*\)/.*$$,\1,'; \
  sed_rest='s,^[^/]*/*,,'; \
  sed_last='s,^.*/\([^/]*\)$$,\1,'; \
  sed_butlast='s,/*[^/]*$$,,'; \
  while test -n "$$dir1"; do \
    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
    if test "$$first" != "."; then \
      if test "$$first" = ".."; then \
        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
      else \
        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
        if test "$$first2" = "$$first"; then \
          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
        else \
          dir2="../$$dir2"; \
        fi; \
        dir0="$$dir0"/"$$first"; \
      fi; \
    fi; \
    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
  done; \
  reldir="$$dir2"
ACLOCAL = ${SHELL} /media/panpan/tools/buildroot-2018.02.8/output/build/pango-1.40.14/missing aclocal-1.15 
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 0
AR = /media/panpan/tools/buildroot-2018.02.8/output/host/bin/arm-linux-gnueabihf-ar
AS = /media/panpan/tools/buildroot-2018.02.8/output/host/bin/arm-linux-gnueabihf-as
AUTOCONF = ${SHELL} /media/panpan/tools/buildroot-2018.02.8/output/build/pango-1.40.14/missing autoconf
AUTOHEADER = ${SHELL} /media/panpan/tools/buildroot-2018.02.8/output/build/pango-1.40.14/missing autoheader
AUTOMAKE = ${SHELL} /media/panpan/tools/buildroot-2018.02.8/output/build/pango-1.40.14/missing automake-1.15
AWK = gawk
CAIRO_CFLAGS = -I/media/panpan/tools/buildroot-2018.02.8/output/host/bin/../arm-buildroot-linux-gnueabihf/sysroot/usr/include/cairo -I/media/panpan/tools/buildroot-2018.02.8/output/host/bin/../arm-buildroot-linux-gnueabihf/sysroot/usr/include/glib-2.0 -I/media/panpan/tools/buildroot-2018.02.8/output/host/bin/../arm-buildroot-linux-gnueabihf/sysroot/usr/lib/glib-2.0/include -I/media/panpan/tools/buildroot-2018.02.8/output/host/bin/../arm-buildroot-linux-gnueabihf/sysroot/usr/include -I/media/panpan/tools/buildroot-2018.02.8/output/host/bin/../arm-buildroot-linux-gnueabihf/sysroot/usr/include/pixman-1 -I/media/panpan/tools/buildroot-2018.02.8/output/host/bin/../arm-buildroot-linux-gnueabihf/sysroot/usr/include/freetype2  -I/media/panpan/tools/buildroot-2018.02.8/output/host/bin/../arm-buildroot-linux-gnueabihf/sysroot/usr/include/libpng16  
CAIRO_LIBS = -L/media/panpan/tools/buildroot-2018.02.8/output/host/bin/../arm-buildroot-linux-gnueabihf/sysroot/usr/lib -lcairo  
CAIRO_PREFIX = /usr
CC = /media/panpan/tools/buildroot-2018.02.8/output/host/bin/arm-linux-gnueabihf-gcc
CCDEPMODE = depmode=none
CFLAGS = -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  -Wall
CPP = /media/panpan/tools/buildroot-2018.02.8/output/host/bin/arm-linux-gnueabihf-cpp
CPPFLAGS = -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64
CXX = /media/panpan/tools/buildroot-2018.02.8/output/host/bin/arm-linux-gnueabihf-g++
CXXCPP = /media/panpan/tools/buildroot-2018.02.8/output/host/bin/arm-linux-gnueabihf-g++ -E
CXXDEPMODE = depmode=none
CXXFLAGS = -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os 
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = dlltool
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
FGREP = /bin/grep -F
FONTCONFIG_CFLAGS = -I/media/panpan/tools/buildroot-2018.02.8/output/host/bin/../arm-buildroot-linux-gnueabihf/sysroot/usr/include -I/media/panpan/tools/buildroot-2018.02.8/output/host/bin/../arm-buildroot-linux-gnueabihf/sysroot/usr/include/freetype2   
FONTCONFIG_LIBS = -L/media/panpan/tools/buildroot-2018.02.8/output/host/bin/../arm-buildroot-linux-gnueabihf/sysroot/usr/lib -lfontconfig -lfreetype  
FREETYPE_CFLAGS = -I/media/panpan/tools/buildroot-2018.02.8/output/host/bin/../arm-buildroot-linux-gnueabihf/sysroot/usr/include/freetype2 -I/media/panpan/tools/buildroot-2018.02.8/output/host/bin/../arm-buildroot-linux-gnueabihf/sysroot/usr/include  
FREETYPE_LIBS = -L/media/panpan/tools/buildroot-2018.02.8/output/host/bin/../arm-buildroot-linux-gnueabihf/sysroot/usr/lib -lfreetype  
GLIB_CFLAGS = -I/media/panpan/tools/buildroot-2018.02.8/output/host/bin/../arm-buildroot-linux-gnueabihf/sysroot/usr/include/glib-2.0 -I/media/panpan/tools/buildroot-2018.02.8/output/host/bin/../arm-buildroot-linux-gnueabihf/sysroot/usr/lib/glib-2.0/include -I/media/panpan/tools/buildroot-2018.02.8/output/host/bin/../arm-buildroot-linux-gnueabihf/sysroot/usr/include -pthread  
GLIB_LIBS = -L/media/panpan/tools/buildroot-2018.02.8/output/host/bin/../arm-buildroot-linux-gnueabihf/sysroot/usr/lib -lgobject-2.0 -lgthread-2.0 -pthread -lglib-2.0  
GLIB_MKENUMS = glib-mkenums
GLIB_PREFIX = /usr
GREP = /bin/grep
GTKDOC_CHECK = 
GTKDOC_CHECK_PATH = 
GTKDOC_DEPS_CFLAGS = -I/media/panpan/tools/buildroot-2018.02.8/output/host/bin/../arm-buildroot-linux-gnueabihf/sysroot/usr/include/glib-2.0 -I/media/panpan/tools/buildroot-2018.02.8/output/host/bin/../arm-buildroot-linux-gnueabihf/sysroot/usr/lib/glib-2.0/include -I/media/panpan/tools/buildroot-2018.02.8/output/host/bin/../arm-buildroot-linux-gnueabihf/sysroot/usr/include  
GTKDOC_DEPS_LIBS = -L/media/panpan/tools/buildroot-2018.02.8/output/host/bin/../arm-buildroot-linux-gnueabihf/sysroot/usr/lib -lgobject-2.0 -lglib-2.0  
GTKDOC_MKPDF = 
GTKDOC_REBASE = true
HARFBUZZ_CFLAGS = -I/media/panpan/tools/buildroot-2018.02.8/output/host/bin/../arm-buildroot-linux-gnueabihf/sysroot/usr/include/harfbuzz -I/media/panpan/tools/buildroot-2018.02.8/output/host/bin/../arm-buildroot-linux-gnueabihf/sysroot/usr/include/glib-2.0 -I/media/panpan/tools/buildroot-2018.02.8/output/host/bin/../arm-buildroot-linux-gnueabihf/sysroot/usr/lib/glib-2.0/include -I/media/panpan/tools/buildroot-2018.02.8/output/host/bin/../arm-buildroot-linux-gnueabihf/sysroot/usr/include  
HARFBUZZ_LIBS = -L/media/panpan/tools/buildroot-2018.02.8/output/host/bin/../arm-buildroot-linux-gnueabihf/sysroot/usr/lib -lharfbuzz  
HTML_DIR = ${datadir}/gtk-doc/html
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
INTROSPECTION_CFLAGS = 
INTROSPECTION_COMPILER = 
INTROSPECTION_GENERATE = 
INTROSPECTION_GIRDIR = 
INTROSPECTION_LIBS = 
INTROSPECTION_MAKEFILE = 
INTROSPECTION_SCANNER = 
INTROSPECTION_TYPELIBDIR = 
LD = /media/panpan/tools/buildroot-2018.02.8/output/host/bin/arm-linux-gnueabihf-ld
LDFLAGS = 
LIBOBJS = 
LIBRARY_LIBTOOL_OPTIONS = -version-info 4000:14:4000 -export-symbols-regex "^pango_.*" -Wl,-Bsymbolic-functions
LIBS = 
LIBTHAI_CFLAGS = 
LIBTHAI_LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIB_EXE_MACHINE_FLAG = 
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
LT_SYS_LIBRARY_PATH = 
MAKEINFO = ${SHELL} /media/panpan/tools/buildroot-2018.02.8/output/build/pango-1.40.14/missing makeinfo
MANIFEST_TOOL = :
MKDIR_P = /bin/mkdir -p
NM = /media/panpan/tools/buildroot-2018.02.8/output/host/bin/arm-linux-gnueabihf-nm
NMEDIT = 
OBJDUMP = /media/panpan/tools/buildroot-2018.02.8/output/host/bin/arm-linux-gnueabihf-objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = pango
PACKAGE_BUGREPORT = http://bugzilla.gnome.org/enter_bug.cgi?product=pango
PACKAGE_NAME = pango
PACKAGE_STRING = pango 1.40.14
PACKAGE_TARNAME = pango
PACKAGE_URL = 
PACKAGE_VERSION = 1.40.14
PANGO_API_VERSION = 1.0
PANGO_BINARY_AGE = 4014
PANGO_CURRENT_MINUS_AGE = 0
PANGO_DEBUG_FLAGS = -DG_DISABLE_CAST_CHECKS
PANGO_HIDDEN_VISIBILITY_CFLAGS = -fvisibility=hidden
PANGO_INTERFACE_AGE = 14
PANGO_VERSION = 1.40.14
PANGO_VERSION_MAJOR = 1
PANGO_VERSION_MICRO = 14
PANGO_VERSION_MINOR = 40
PATH_SEPARATOR = :
PKGCONFIG_CAIRO_REQUIRES =  pangoft2
PKG_CONFIG = /media/panpan/tools/buildroot-2018.02.8/output/host/bin/pkg-config
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = 
RANLIB = /media/panpan/tools/buildroot-2018.02.8/output/host/bin/arm-linux-gnueabihf-ranlib
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/sh
STRIP = /media/panpan/tools/buildroot-2018.02.8/output/host/bin/arm-linux-gnueabihf-strip
VERSION = 1.40.14
WINDRES = 
XFT_CFLAGS = 
XFT_LIBS = 
abs_builddir = /media/panpan/tools/buildroot-2018.02.8/output/build/pango-1.40.14/pango
abs_srcdir = /media/panpan/tools/buildroot-2018.02.8/output/build/pango-1.40.14/pango
abs_top_builddir = /media/panpan/tools/buildroot-2018.02.8/output/build/pango-1.40.14
abs_top_srcdir = /media/panpan/tools/buildroot-2018.02.8/output/build/pango-1.40.14
ac_ct_AR = 
ac_ct_CC = 
ac_ct_CXX = 
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = x86_64-pc-linux-gnu
build_alias = x86_64-pc-linux-gnu
build_cpu = x86_64
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = /usr
host = arm-buildroot-linux-gnueabihf
host_alias = arm-buildroot-linux-gnueabihf
host_cpu = arm
host_os = linux-gnueabihf
host_vendor = buildroot
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /media/panpan/tools/buildroot-2018.02.8/output/build/pango-1.40.14/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = /var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
ms_librarian = 
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr
program_transform_name = s&^&&
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = /etc
target_alias = arm-buildroot-linux-gnueabihf
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..

# We set GPATH here; this gives us semantics for GNU make
# which are more like other make's VPATH.
GPATH = $(srcdir)
INTROSPECTION_GIRS = Pango-1.0.gir $(am__append_6) $(am__append_11) \
	$(am__append_16)
INTROSPECTION_SCANNER_ARGS = --warn-all --add-include-path=$(srcdir) --add-include-path=.
INTROSPECTION_COMPILER_ARGS = --includedir=$(srcdir) --includedir=.
INTROSPECTION_SCANNER_ENV = CC="$(CC)"
SUBDIRS = mini-fribidi
INCLUDES = \
	-DG_LOG_DOMAIN=\"Pango\"			\
	-DPANGO_COMPILATION				\
	-DPANGO_ENABLE_BACKEND				\
	-DPANGO_ENABLE_ENGINE				\
	-DSYSCONFDIR=\"$(sysconfdir)\"			\
	-DLIBDIR=\"$(libdir)\"				\
	-I$(top_srcdir)					\
	-I$(top_builddir)				\
	$(PANGO_DEBUG_FLAGS)				\
	$(GLIB_CFLAGS)					\
	$(XFT_CFLAGS)					\
	$(CAIRO_CFLAGS)					\
	$(HARFBUZZ_CFLAGS)				\
	$(FREETYPE_CFLAGS)				\
	$(FONTCONFIG_CFLAGS)				\
	$(LIBTHAI_CFLAGS)					\
	$(X_CFLAGS)					\
	$(PANGO_HIDDEN_VISIBILITY_CFLAGS)

BUILT_SOURCES = pango-enum-types.h pango-enum-types.c pango-features.h
pangoincludedir = $(includedir)/pango-1.0/pango
libm = -lm

# ------------------- libpango -------------------
lib_LTLIBRARIES = libpango-1.0.la $(am__append_5) $(am__append_10) \
	$(am__append_15) $(am__append_31)
libpango_1_0_la_LDFLAGS = $(LIBRARY_LIBTOOL_OPTIONS) $(am__append_1)
libpango_1_0_la_LIBADD = $(GLIB_LIBS) $(LIBTHAI_LIBS) $(libm) \
	mini-fribidi/libmini-fribidi.la
libpango_1_0_la_DEPENDENCIES = mini-fribidi/libmini-fribidi.la \
	$(am__append_2)
libpango_1_0_la_SOURCES = \
	break.c					\
	ellipsize.c				\
	fonts.c					\
	glyphstring.c				\
	modules.c				\
	pango-attributes.c			\
	pango-bidi-type.c			\
	pango-color.c				\
	pango-color-table.h			\
	pango-context.c				\
	pango-coverage.c			\
	pango-emoji.c				\
	pango-emoji-private.h			\
	pango-emoji-table.h			\
	pango-engine.c				\
	pango-engine-private.h			\
	pango-fontmap.c				\
	pango-fontset.c				\
	pango-glyph-item.c			\
	pango-gravity.c				\
	pango-impl-utils.h			\
	pango-item.c				\
	pango-language.c			\
	pango-language-sample-table.h		\
	pango-layout.c				\
	pango-layout-private.h			\
	pango-markup.c				\
	pango-matrix.c				\
	pango-renderer.c			\
	pango-script.c				\
	pango-script-lang-table.h		\
	pango-script-private.h			\
	pango-tabs.c				\
	pango-utils.c				\
	pango-utils-internal.h			\
	reorder-items.c				\
	shape.c					\
	pango-enum-types.c

pango_headers = \
	pango.h			\
	pango-attributes.h	\
	pango-bidi-type.h	\
	pango-break.h		\
	pango-context.h		\
	pango-coverage.h	\
	pango-engine.h		\
	pango-font.h		\
	pango-fontmap.h		\
	pango-fontset.h		\
	pango-glyph.h		\
	pango-glyph-item.h	\
	pango-gravity.h		\
	pango-item.h		\
	pango-language.h	\
	pango-layout.h		\
	pango-matrix.h		\
	pango-modules.h		\
	pango-renderer.h	\
	pango-script.h		\
	pango-tabs.h		\
	pango-types.h		\
	pango-utils.h		\
	pango-version-macros.h

pangoinclude_HEADERS = $(pango_headers) pango-features.h \
	pango-enum-types.h $(am__append_4) $(am__append_9) \
	$(am__append_14) $(am__append_26) $(am__append_30)
pango_introspection_files = \
        $(libpango_1_0_la_SOURCES) \
	    $(pango_headers) \
	    pango-enum-types.h

Pango_1_0_gir_PACKAGES = gobject-2.0 cairo glib-2.0 $(am__append_3)
Pango_1_0_gir_EXPORT_PACKAGES = pango
Pango_1_0_gir_INCLUDES = GObject-2.0 cairo-1.0
Pango_1_0_gir_LIBS = libpango-1.0.la
Pango_1_0_gir_CFLAGS = -I$(top_builddir) -I$(top_srcdir) $(INCLUDES)
Pango_1_0_gir_FILES = $(filter-out %-private.h pango-color-table.h, $(pango_introspection_files))
Pango_1_0_gir_SCANNERFLAGS = --c-include "pango/pango.h"
pangoft2_headers = \
	pango-ot.h		\
	pangofc-font.h		\
	pangofc-fontmap.h	\
	pangofc-decoder.h	\
	pangoft2.h

pangoft2_public_sources = \
	pangofc-font.c	   	\
	pangofc-fontmap.c	\
	pangofc-decoder.c	\
	pangofc-shape.c		\
	pangoft2.c

libpangoft2_1_0_la_LDFLAGS = $(LIBRARY_LIBTOOL_OPTIONS) \
	$(am__append_7)
libpangoft2_1_0_la_LIBADD = \
	libpango-$(PANGO_API_VERSION).la	\
	$(GLIB_LIBS)				\
	$(HARFBUZZ_LIBS)			\
	$(FREETYPE_LIBS)			\
	$(FONTCONFIG_LIBS)			\
	$(libm)

libpangoft2_1_0_la_DEPENDENCIES = libpango-$(PANGO_API_VERSION).la \
	$(am__append_8)
libpangoft2_1_0_la_SOURCES = \
	$(pangoft2_public_sources) \
	pangofc-private.h	\
	pangoft2.h		\
	pangoft2-private.h	\
	pangoft2-fontmap.c	\
	pangoft2-render.c	\
	pango-ot-private.h	\
	pango-ot-buffer.c	\
	pango-ot-info.c		\
	pango-ot-ruleset.c      \
	pango-ot-tag.c

pangoft2_introspection_files = \
        $(pangoft2_headers) \
        $(pangoft2_public_sources)

PangoFT2_1_0_gir_PACKAGES = freetype2
PangoFT2_1_0_gir_EXPORT_PACKAGES = pangoft2
PangoFT2_1_0_gir_INCLUDES = GObject-2.0 cairo-1.0 freetype2-2.0 fontconfig-2.0
PangoFT2_1_0_gir_LIBS = $(Pango_1_0_gir_LIBS) libpangoft2-1.0.la
PangoFT2_1_0_gir_CFLAGS = -I$(top_builddir) -I$(top_srcdir) $(INCLUDES)
PangoFT2_1_0_gir_SCANNERFLAGS = --include-uninstalled=$(builddir)/Pango-1.0.gir --c-include "pango/pangoft2.h"
PangoFT2_1_0_gir_FILES = $(filter-out %-private.h, $(addprefix $(srcdir)/,$(pangoft2_introspection_files)))
pangoxft_headers = pangoxft.h pangoxft-render.h
libpangoxft_1_0_la_LDFLAGS = $(LIBRARY_LIBTOOL_OPTIONS) \
	$(am__append_12)
libpangoxft_1_0_la_LIBADD = \
	libpangoft2-$(PANGO_API_VERSION).la	\
	libpango-$(PANGO_API_VERSION).la	\
	$(GLIB_LIBS)				\
	$(XFT_LIBS)				\
	$(FREETYPE_LIBS)			\
	$(FONTCONFIG_LIBS)			\
	$(libm)

libpangoxft_1_0_la_DEPENDENCIES = libpangoft2-$(PANGO_API_VERSION).la \
	libpango-$(PANGO_API_VERSION).la $(am__append_13)
libpangoxft_1_0_la_SOURCES = \
	pangoxft-font.c		\
	pangoxft-fontmap.c      \
	pangoxft-private.h	\
	pangoxft-render.c

pangoxft_introspection_files = \
    $(pangoxft_headers) \
    $(libpangoxft_1_0_la_SOURCES)

PangoXft_1_0_gir_PACKAGES = gobject-2.0 freetype2
PangoXft_1_0_gir_EXPORT_PACKAGES = pangoxft
PangoXft_1_0_gir_INCLUDES = GObject-2.0 xft-2.0 xlib-2.0
PangoXft_1_0_gir_LIBS = $(PangoFT2_1_0_gir_LIBS) libpangoxft-1.0.la
PangoXft_1_0_gir_CFLAGS = -I$(top_builddir) -I$(top_srcdir) $(INCLUDES)
PangoXft_1_0_gir_SCANNERFLAGS = --include-uninstalled=$(builddir)/Pango-1.0.gir --include-uninstalled=$(builddir)/PangoFT2-1.0.gir --c-include "pango/pangoxft.h"
PangoXft_1_0_gir_FILES = $(filter-out %-private.h, $(addprefix $(srcdir)/,$(pangoxft_introspection_files)))
pangocairo_headers = pangocairo.h
libpangocairo_1_0_la_LDFLAGS = $(LIBRARY_LIBTOOL_OPTIONS) \
	$(am__append_17) $(am__append_27)
libpangocairo_1_0_la_LIBADD = libpango-$(PANGO_API_VERSION).la \
	$(GLIB_LIBS) $(CAIRO_LIBS) $(FONTCONFIG_LIBS) $(libm) \
	$(am__append_19) $(am__append_22)
libpangocairo_1_0_la_DEPENDENCIES = libpango-$(PANGO_API_VERSION).la \
	$(am__append_18) $(am__append_20) $(am__append_23)
pangocairo_core_sources = \
	pangocairo-context.c    \
	pangocairo-font.c	\
	pangocairo-fontmap.c    \
	pangocairo-render.c	\
	pangocairo-private.h

libpangocairo_1_0_la_SOURCES = $(pangocairo_core_sources) \
	$(am__append_21) $(am__append_24) $(am__append_25)
PANGOCAIRO_FONT_BACKEND_GI_MODULE = PangoFT2-1.0.gir
# We don't have an CoreText GIR right now, so this is just hypothetical
# PANGOCAIRO_FONT_BACKEND_GI_MODULE = PangoCoreText-1.0.gir
pangocairo_introspection_files = \
    $(libpangocairo_1_0_la_SOURCES) \
    $(pangocairo_headers)

PangoCairo_1_0_gir_PACKAGES = gobject-2.0 cairo
PangoCairo_1_0_gir_EXPORT_PACKAGES = pangocairo
PangoCairo_1_0_gir_INCLUDES = GObject-2.0 cairo-1.0
PangoCairo_1_0_gir_LIBS = $(Pango_1_0_gir_LIBS) libpangocairo-1.0.la \
	$(am__append_29)
PangoCairo_1_0_gir_CFLAGS = -I$(top_builddir) -I$(top_srcdir) $(INCLUDES)
PangoCairo_1_0_gir_SCANNERFLAGS =  \
	--include-uninstalled=$(builddir)/Pango-1.0.gir --c-include \
	"pango/pangocairo.h" $(am__append_28)
PangoCairo_1_0_gir_FILES = $(filter-out %-private.h, $(addprefix $(srcdir)/,$(pangocairo_introspection_files)))
libpangowin32_1_0_la_LDFLAGS = $(LIBRARY_LIBTOOL_OPTIONS) \
	$(am__append_32)
libpangowin32_1_0_la_LIBADD = \
	libpango-$(PANGO_API_VERSION).la	\
	$(GLIB_LIBS)				\
	-lgdi32 -lusp10

libpangowin32_1_0_la_DEPENDENCIES = libpango-$(PANGO_API_VERSION).la \
	$(am__append_33)
libpangowin32_1_0_la_SOURCES = \
	pangowin32.h		\
	pangowin32.c		\
	pangowin32-private.h	\
	pangowin32-fontcache.c	\
	pangowin32-fontmap.c	\
	pangowin32-shape.c


# ------------------- introspection -------------------
#girdir = $(datadir)/gir-1.0
#gir_DATA = $(INTROSPECTION_GIRS)
#typelibsdir = $(libdir)/girepository-1.0
#typelibs_DATA = $(INTROSPECTION_GIRS:.gir=.typelib)
EXTRA_DIST = \
	pango-enum-types.h			\
	pango-enum-types.h.template		\
	pango-enum-types.c.template		\
	pango.rc				\
	pango.rc.in				\
	pangoft2.rc				\
	pangoft2.rc.in				\
	pangowin32.rc				\
	pangowin32.rc.in			\
	pangocairo.rc				\
	pangocairo.rc.in			\
	pangoxft.rc				\
	pangoxft.rc.in				\
	break-arabic.c				\
	break-indic.c				\
	break-thai.c

CLEANFILES = \
	pango-enum-types.h	\
	s-enum-types-h		\
	pango-enum-types.c	\
	s-enum-types-c      \
    $(INTROSPECTION_GIRS) \
    $(INTROSPECTION_GIRS:.gir=.typelib)

MOSTLYCLEANFILES = \
	*.list			\
	*.expected

DISTCLEANFILES = \
	pango-features.h


# ------------------- MSVC Build Items ----------------
extra_fribidi_srcs_for_msvc = \
	mini-fribidi/fribidi.c			\
	mini-fribidi/fribidi_char_type.c	\
	mini-fribidi/fribidi_types.c

MSVCPROJS = pango pangowin32 pangoft2 pangocairo
pango_FILES = \
	$(extra_fribidi_srcs_for_msvc)	\
	$(libpango_1_0_la_SOURCES)

pango_EXCLUDES = dummy
pango_HEADERS_DIR = $(pangoincludedir)

# We can't just use $(pangoinclude_HEADERS), due to different platforms this may run on.
# We don't include the pangoft2 headers here, as it is optional on Windows Builds.
pango_HEADERS_INST = \
	$(pango_headers)	\
	$(pangocairo_headers)	\
	pangowin32.h		\
	pango-features.h	\
	pango-enum-types.h

pango_HEADERS_EXCLUDES = dummy
pangowin32_FILES = $(libpangowin32_1_0_la_SOURCES)
pangowin32_EXCLUDES = dummy
pangoft2_FILES = $(libpangoft2_1_0_la_SOURCES)
pangoft2_EXCLUDES = dummy

# Again, can't use $(libpangocairo_1_0_la_SOURCES), due to different platforms this may run on.
pangocairo_FILES = $(pangocairo_core_sources)
pangocairo_EXCLUDES = dummy
_proj_name = $(subst /,_,$(subst -,_,$(subst .,_,$(1))))
_proj_path_raw := $(subst $(abs_top_srcdir),,$(abs_srcdir))
_proj_path = $(subst /,\\,$(_proj_path_raw))
_proj_subdir_int = $(subst \\\\,\\,\\$(_proj_path)\\)
_proj_subdir = $(subst \\.\\,\\,$(_proj_subdir_int))
_proj_files_raw = $(subst /,\\,$($(_proj_name)_FILES))
_proj_files = $(subst $(srcdir)\\,,$(subst $(builddir)\\,,$(subst $(top_builddir)\\$(_proj_path)\\,\\,$(_proj_files_raw))))
_proj_filters = $($(_proj_name)_EXCLUDES)
_proj_headers_raw = $(subst /,\\,$($(_proj_name)_HEADERS_INST))
_proj_headers = $(subst $(srcdir)\\,,$(subst $(builddir)\\,,$(subst $(top_builddir)\\$(_proj_path)\\,\\,$(_proj_headers_raw))))
_proj_headers_excludes = $($(_proj_name)_HEADERS_EXCLUDES)
_headers_dest_posix = $(subst $(includedir),,$($(_proj_name)_HEADERS_DIR))
_headers_destdir = $(subst /,\\,$(_headers_dest_posix))

# Introspection Items for MSVC
#MSVC_INTROSPECT_GIRS = Pango-1.0.gir PangoCairo-1.0.gir
#BASE_MSVC_GIR_CFLAGS = \
#	-DG_LOG_DOMAIN=\"Pango\"	\
#	-DPANGO_ENABLE_BACKEND		\
#	-DPANGO_ENABLE_ENGINE

INTROSPECTION_INTERMEDIATE_ITEMS = 
#INTROSPECTION_INTERMEDIATE_ITEMS = \
#	$(top_builddir)/win32/Pango-1.0.gir.msvc.introspect		\
#	$(top_builddir)/win32/Pango_1_0_gir_list			\
#	$(top_builddir)/win32/PangoCairo-1.0.gir.msvc.introspect	\
#	$(top_builddir)/win32/PangoCairo_1_0_gir_list

#Pango_1_0_gir_MSVC_FILES = $(Pango_1_0_gir_FILES)
#Pango_1_0_gir_MSVC_PACKAGES = gobject-2.0 cairo glib-2.0
#Pango_1_0_gir_MSVC_EXPORT_PACKAGES = $(Pango_1_0_gir_EXPORT_PACKAGES)
#Pango_1_0_gir_MSVC_INCLUDE_GIRS = $(Pango_1_0_gir_INCLUDES)
#Pango_1_0_gir_MSVC_LIBS = pango-1.0
#Pango_1_0_gir_MSVC_CFLAGS = -I.. $(BASE_MSVC_GIR_CFLAGS)
#Pango_1_0_gir_MSVC_SCANNERFLAGS = $(Pango_1_0_gir_SCANNERFLAGS)
#pangocairo_msvc_introspection_files = \
#	$(pangocairo_core_sources)	\
#	pangocairo-win32font.c		\
#	pangocairo-win32fontmap.c	\
#	pangocairo-win32.h		\
#	$(pangocairo_headers)

#PangoCairo_1_0_gir_MSVC_FILES = $(filter-out %-private.h, $(pangocairo_msvc_introspection_files))
#PangoCairo_1_0_gir_MSVC_GIR_DEPS = Pango-1.0.gir
#PangoCairo_1_0_gir_MSVC_PACKAGES = $(PangoCairo_1_0_gir_PACKAGES)
#PangoCairo_1_0_gir_MSVC_EXPORT_PACKAGES = $(PangoCairo_1_0_gir_EXPORT_PACKAGES)
#PangoCairo_1_0_gir_MSVC_INCLUDE_GIRS = $(PangoCairo_1_0_gir_INCLUDES) win32-1.0
#PangoCairo_1_0_gir_MSVC_LIBS = $(Pango_1_0_gir_MSVC_LIBS) pangocairo-1.0
#PangoCairo_1_0_gir_MSVC_CFLAGS = $(Pango_1_0_gir_MSVC_CFLAGS)
#PangoCairo_1_0_gir_MSVC_SCANNERFLAGS = --include-uninstalled=./Pango-1.0.gir --c-include "pango/pangocairo.h"
#_gir_name = $(subst /,_,$(subst -,_,$(subst .,_,$(1))))

# Namespace and Version is either fetched from the gir filename
# or the _NAMESPACE/_VERSION variable combo
#_gir_namespace_msvc = $(or $($(_gir_name)_NAMESPACE),$(firstword $(subst -, ,$(notdir $(1)))))
#_gir_version_msvc = $(or $($(_gir_name)_VERSION),$(lastword $(subst -, ,$(1:.gir=))))
#_typelib_basename_msvc = $(_gir_namespace_msvc)'-'$(_gir_version_msvc)

# _PROGRAM is an optional variable which needs its own --program argument
#_gir_program_msvc = $(if $($(_gir_name)_MSVC_PROGRAM),--program=$($(_gir_name)_MSVC_PROGRAM))

# Deduce the sub-folder from $(srcroot) where the sources reside in
#_gir_source_path_raw_msvc := $(subst $(abs_top_srcdir),,$(abs_srcdir))
#_gir_source_path_msvc = $(subst /,\\,$(_gir_source_path_raw_msvc))
#_gir_source_subdir_int_msvc = $(subst \\\\,\\,\\$(_gir_source_path_msvc)\\)
#_gir_source_subdir_msvc = $(subst \\.\\,\\,$(_gir_source_subdir_int_msvc))
#_gir_files_raw_msvc = $(subst /,\\,$($(_gir_name)_MSVC_FILES))
#_gir_files_msvc = $(subst $(srcdir)\\,,$(subst $(builddir)\\,,$(subst $(top_builddir)\\$(_gir_source_path_msvc)\\,\\,$(_gir_files_raw_msvc))))

# Create a list of items for:
# - Libraries
# - Packages
# - GIRs to include
# - packages to export
#_gir_libraries_msvc = $(foreach lib,$($(_gir_name)_MSVC_LIBS),--library=$(lib))
#_gir_packages_msvc = $(foreach pkg,$($(_gir_name)_MSVC_PACKAGES),--pkg=$(pkg))
#_gir_includes_msvc = $(foreach include,$($(_gir_name)_MSVC_INCLUDE_GIRS),--include=$(include))
#_gir_export_packages_msvc = $(foreach pkg,$($(_gir_name)_MSVC_EXPORT_PACKAGES),--pkg-export=$(pkg))
#_gir_c_includes_msvc = $(foreach include,$($(_gir_name)_MSVC_C_INCLUDES),--c-include=$(include))
all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-recursive

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(top_srcdir)/win32/Makefile.msvcproj $(top_srcdir)/win32/Makefile.msvc-introspection $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnits pango/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnits pango/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;
$(top_srcdir)/win32/Makefile.msvcproj $(top_srcdir)/win32/Makefile.msvc-introspection $(am__empty):

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
pango.rc: $(top_builddir)/config.status $(srcdir)/pango.rc.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
pangoft2.rc: $(top_builddir)/config.status $(srcdir)/pangoft2.rc.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
pangowin32.rc: $(top_builddir)/config.status $(srcdir)/pangowin32.rc.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
pangocairo.rc: $(top_builddir)/config.status $(srcdir)/pangocairo.rc.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
pangoxft.rc: $(top_builddir)/config.status $(srcdir)/pangoxft.rc.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@

install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libdir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(libdir)"; \
	}

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$f"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

libpango-1.0.la: $(libpango_1_0_la_OBJECTS) $(libpango_1_0_la_DEPENDENCIES) $(EXTRA_libpango_1_0_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libpango_1_0_la_LINK) -rpath $(libdir) $(libpango_1_0_la_OBJECTS) $(libpango_1_0_la_LIBADD) $(LIBS)

libpangocairo-1.0.la: $(libpangocairo_1_0_la_OBJECTS) $(libpangocairo_1_0_la_DEPENDENCIES) $(EXTRA_libpangocairo_1_0_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libpangocairo_1_0_la_LINK) $(am_libpangocairo_1_0_la_rpath) $(libpangocairo_1_0_la_OBJECTS) $(libpangocairo_1_0_la_LIBADD) $(LIBS)

libpangoft2-1.0.la: $(libpangoft2_1_0_la_OBJECTS) $(libpangoft2_1_0_la_DEPENDENCIES) $(EXTRA_libpangoft2_1_0_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libpangoft2_1_0_la_LINK) $(am_libpangoft2_1_0_la_rpath) $(libpangoft2_1_0_la_OBJECTS) $(libpangoft2_1_0_la_LIBADD) $(LIBS)

libpangowin32-1.0.la: $(libpangowin32_1_0_la_OBJECTS) $(libpangowin32_1_0_la_DEPENDENCIES) $(EXTRA_libpangowin32_1_0_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libpangowin32_1_0_la_LINK) $(am_libpangowin32_1_0_la_rpath) $(libpangowin32_1_0_la_OBJECTS) $(libpangowin32_1_0_la_LIBADD) $(LIBS)

libpangoxft-1.0.la: $(libpangoxft_1_0_la_OBJECTS) $(libpangoxft_1_0_la_DEPENDENCIES) $(EXTRA_libpangoxft_1_0_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libpangoxft_1_0_la_LINK) $(am_libpangoxft_1_0_la_rpath) $(libpangoxft_1_0_la_OBJECTS) $(libpangoxft_1_0_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

#include ./$(DEPDIR)/break.Plo
#include ./$(DEPDIR)/ellipsize.Plo
#include ./$(DEPDIR)/fonts.Plo
#include ./$(DEPDIR)/glyphstring.Plo
#include ./$(DEPDIR)/modules.Plo
#include ./$(DEPDIR)/pango-attributes.Plo
#include ./$(DEPDIR)/pango-bidi-type.Plo
#include ./$(DEPDIR)/pango-color.Plo
#include ./$(DEPDIR)/pango-context.Plo
#include ./$(DEPDIR)/pango-coverage.Plo
#include ./$(DEPDIR)/pango-emoji.Plo
#include ./$(DEPDIR)/pango-engine.Plo
#include ./$(DEPDIR)/pango-enum-types.Plo
#include ./$(DEPDIR)/pango-fontmap.Plo
#include ./$(DEPDIR)/pango-fontset.Plo
#include ./$(DEPDIR)/pango-glyph-item.Plo
#include ./$(DEPDIR)/pango-gravity.Plo
#include ./$(DEPDIR)/pango-item.Plo
#include ./$(DEPDIR)/pango-language.Plo
#include ./$(DEPDIR)/pango-layout.Plo
#include ./$(DEPDIR)/pango-markup.Plo
#include ./$(DEPDIR)/pango-matrix.Plo
#include ./$(DEPDIR)/pango-ot-buffer.Plo
#include ./$(DEPDIR)/pango-ot-info.Plo
#include ./$(DEPDIR)/pango-ot-ruleset.Plo
#include ./$(DEPDIR)/pango-ot-tag.Plo
#include ./$(DEPDIR)/pango-renderer.Plo
#include ./$(DEPDIR)/pango-script.Plo
#include ./$(DEPDIR)/pango-tabs.Plo
#include ./$(DEPDIR)/pango-utils.Plo
#include ./$(DEPDIR)/pangocairo-context.Plo
#include ./$(DEPDIR)/pangocairo-coretextfont.Plo
#include ./$(DEPDIR)/pangocairo-coretextfontmap.Plo
#include ./$(DEPDIR)/pangocairo-fcfont.Plo
#include ./$(DEPDIR)/pangocairo-fcfontmap.Plo
#include ./$(DEPDIR)/pangocairo-font.Plo
#include ./$(DEPDIR)/pangocairo-fontmap.Plo
#include ./$(DEPDIR)/pangocairo-render.Plo
#include ./$(DEPDIR)/pangocairo-win32font.Plo
#include ./$(DEPDIR)/pangocairo-win32fontmap.Plo
#include ./$(DEPDIR)/pangocoretext-fontmap.Plo
#include ./$(DEPDIR)/pangocoretext-shape.Plo
#include ./$(DEPDIR)/pangocoretext.Plo
#include ./$(DEPDIR)/pangofc-decoder.Plo
#include ./$(DEPDIR)/pangofc-font.Plo
#include ./$(DEPDIR)/pangofc-fontmap.Plo
#include ./$(DEPDIR)/pangofc-shape.Plo
#include ./$(DEPDIR)/pangoft2-fontmap.Plo
#include ./$(DEPDIR)/pangoft2-render.Plo
#include ./$(DEPDIR)/pangoft2.Plo
#include ./$(DEPDIR)/pangowin32-fontcache.Plo
#include ./$(DEPDIR)/pangowin32-fontmap.Plo
#include ./$(DEPDIR)/pangowin32-shape.Plo
#include ./$(DEPDIR)/pangowin32.Plo
#include ./$(DEPDIR)/pangoxft-font.Plo
#include ./$(DEPDIR)/pangoxft-fontmap.Plo
#include ./$(DEPDIR)/pangoxft-render.Plo
#include ./$(DEPDIR)/reorder-items.Plo
#include ./$(DEPDIR)/shape.Plo

.c.o:
#	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
#	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(COMPILE) -c -o $@ $<

.c.obj:
#	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
#	$(AM_V_CC)$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
#	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	$(AM_V_CC)source='$<' object='$@' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(LTCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-girDATA: $(gir_DATA)
	@$(NORMAL_INSTALL)
	@list='$(gir_DATA)'; test -n "$(girdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(girdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(girdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(girdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(girdir)" || exit $$?; \
	done

uninstall-girDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(gir_DATA)'; test -n "$(girdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(girdir)'; $(am__uninstall_files_from_dir)
install-typelibsDATA: $(typelibs_DATA)
	@$(NORMAL_INSTALL)
	@list='$(typelibs_DATA)'; test -n "$(typelibsdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(typelibsdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(typelibsdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(typelibsdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(typelibsdir)" || exit $$?; \
	done

uninstall-typelibsDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(typelibs_DATA)'; test -n "$(typelibsdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(typelibsdir)'; $(am__uninstall_files_from_dir)
install-pangoincludeHEADERS: $(pangoinclude_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(pangoinclude_HEADERS)'; test -n "$(pangoincludedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(pangoincludedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(pangoincludedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(pangoincludedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(pangoincludedir)" || exit $$?; \
	done

uninstall-pangoincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(pangoinclude_HEADERS)'; test -n "$(pangoincludedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(pangoincludedir)'; $(am__uninstall_files_from_dir)

# This directory's subdirectories are mostly independent; you can cd
# into them and run 'make' without going through this Makefile.
# To change the values of 'make' variables: instead of editing Makefiles,
# (1) if the variable is set in 'config.status', edit 'config.status'
#     (which will cause the Makefiles to be regenerated when you run 'make');
# (2) otherwise, pass the desired values on the 'make' command line.
$(am__recursive_targets):
	@fail=; \
	if $(am__make_keepgoing); then \
	  failcom='fail=yes'; \
	else \
	  failcom='exit 1'; \
	fi; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-recursive
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-recursive

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-recursive

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    $(am__make_dryrun) \
	      || test -d "$(distdir)/$$subdir" \
	      || $(MKDIR_P) "$(distdir)/$$subdir" \
	      || exit 1; \
	    dir1=$$subdir; dir2="$(distdir)/$$subdir"; \
	    $(am__relativize); \
	    new_distdir=$$reldir; \
	    dir1=$$subdir; dir2="$(top_distdir)"; \
	    $(am__relativize); \
	    new_top_distdir=$$reldir; \
	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\"; \
	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \
	    ($(am__cd) $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$new_top_distdir" \
	        distdir="$$new_distdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
		am__skip_mode_fix=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
	$(MAKE) $(AM_MAKEFLAGS) \
	  top_distdir="$(top_distdir)" distdir="$(distdir)" \
	  dist-hook
check-am: all-am
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-recursive
all-am: Makefile $(LTLIBRARIES) $(DATA) $(HEADERS)
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(girdir)" "$(DESTDIR)$(typelibsdir)" "$(DESTDIR)$(pangoincludedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:
	-test -z "$(MOSTLYCLEANFILES)" || rm -f $(MOSTLYCLEANFILES)

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-recursive

clean-am: clean-generic clean-libLTLIBRARIES clean-libtool \
	mostlyclean-am

distclean: distclean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

html-am:

info: info-recursive

info-am:

install-data-am: install-girDATA install-pangoincludeHEADERS \
	install-typelibsDATA

install-dvi: install-dvi-recursive

install-dvi-am:

install-exec-am: install-libLTLIBRARIES

install-html: install-html-recursive

install-html-am:

install-info: install-info-recursive

install-info-am:

install-man:

install-pdf: install-pdf-recursive

install-pdf-am:

install-ps: install-ps-recursive

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-girDATA uninstall-libLTLIBRARIES \
	uninstall-pangoincludeHEADERS uninstall-typelibsDATA

.MAKE: $(am__recursive_targets) all check install install-am \
	install-strip

.PHONY: $(am__recursive_targets) CTAGS GTAGS TAGS all all-am check \
	check-am clean clean-generic clean-libLTLIBRARIES \
	clean-libtool cscopelist-am ctags ctags-am dist-hook distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-girDATA \
	install-html install-html-am install-info install-info-am \
	install-libLTLIBRARIES install-man install-pangoincludeHEADERS \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip install-typelibsDATA installcheck \
	installcheck-am installdirs installdirs-am maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags tags-am uninstall uninstall-am uninstall-girDATA \
	uninstall-libLTLIBRARIES uninstall-pangoincludeHEADERS \
	uninstall-typelibsDATA

.PRECIOUS: Makefile


include $(INTROSPECTION_MAKEFILE)
pango-win32-res.o: pango.rc
	$(AM_V_GEN) $(WINDRES) $< $@

pango-enum-types.h: s-enum-types-h
s-enum-types-h: $(pango_headers) Makefile.am pango-enum-types.h.template
	$(AM_V_GEN) ( cd $(srcdir) && $(GLIB_MKENUMS) \
			 --template pango-enum-types.h.template \
			$(pango_headers) ) > pango-enum-types.h.tmp \
			&& mv pango-enum-types.h.tmp pango-enum-types.h \
			&& echo timestamp > $@

pango-enum-types.c: s-enum-types-c
s-enum-types-c: $(pango_headers) Makefile.am pango-enum-types.c.template
	$(AM_V_GEN) ( cd $(srcdir) && $(GLIB_MKENUMS) \
			 --template pango-enum-types.c.template \
			$(pango_headers) ) > pango-enum-types.c.tmp \
			&& mv pango-enum-types.c.tmp pango-enum-types.c \
			&& echo timestamp > $@

pango-features.h:
	$(AM_V_GEN) cd $(top_builddir) && ./config.status pango/pango-features.h
Pango-1.0.gir: libpango-1.0.la
pangoft2-win32-res.o: pangoft2.rc
	$(AM_V_GEN) $(WINDRES) $< $@

PangoFT2-1.0.gir: libpangoft2-1.0.la
PangoFT2-1.0.gir: Pango-1.0.gir
pangoxft-win32-res.o: pangoxft.rc
	$(AM_V_GEN) $(WINDRES) $< $@

PangoXft-1.0.gir: libpangoxft-1.0.la
PangoXft-1.0.gir: Pango-1.0.gir PangoFT2-1.0.gir
#pangocairo-win32-res.o: pangocairo.rc
#	$(AM_V_GEN) $(WINDRES) $< $@

PangoCairo-1.0.gir: libpangocairo-1.0.la
PangoCairo-1.0.gir: Pango-1.0.gir $(PANGOCAIRO_FONT_BACKEND_GI_MODULE)
pangowin32-win32-res.o: pangowin32.rc
	$(AM_V_GEN) $(WINDRES) $< $@

#
# Creates Visual Studio 2008/2010 projects from items passed in from autotools files
# $(1) - Base Name of the MSVC project files (outputs)
#

define msvcproj-builder

$(top_builddir)/win32/vs10/$(1).vcxproj: $(top_builddir)/win32/vs9/$(1).vcproj
$(top_builddir)/win32/vs10/$(1).vcxproj.filters: $(top_builddir)/win32/vs9/$(1).vcproj
$(1).sourcefiles: $(top_builddir)/win32/vs9/$(1).vcproj
$(1).vs10.sourcefiles: $(top_builddir)/win32/vs9/$(1).vcproj
$(1).vs10.sourcefiles.filters: $(top_builddir)/win32/vs9/$(1).vcproj

$(top_builddir)/win32/vs9/$(1).vcproj: Makefile
	-$(RM) $(top_builddir)/win32/vs9/$(1).vcproj
	-$(RM) $(top_builddir)/win32/vs10/$(1).vcxproj
	-$(RM) $(top_builddir)/win32/vs10/$(1).vcxproj.filters
	-$(RM) $(top_builddir)/win32/vs11/$(1).vcxproj
	-$(RM) $(top_builddir)/win32/vs11/$(1).vcxproj.filters
	-$(RM) $(top_builddir)/win32/vs12/$(1).vcxproj
	-$(RM) $(top_builddir)/win32/vs12/$(1).vcxproj.filters
	-$(RM) $(top_builddir)/win32/vs14/$(1).vcxproj
	-$(RM) $(top_builddir)/win32/vs14/$(1).vcxproj.filters

	for F in $(_proj_files); do \
		case $$$$F in \
		$(_proj_filters)) \
			;; \
		*.c|*.cpp|*.cc|*.cxx) \
			echo '   <File RelativePath="..\..'$(_proj_subdir)$$$$F'" />' >>$(1).sourcefiles && \
			echo '   <ClCompile Include="..\..'$(_proj_subdir)$$$$F'" />' >>$(1).vs10.sourcefiles && \
			echo '   <ClCompile Include="..\..'$(_proj_subdir)$$$$F'"><Filter>Source Files</Filter></ClCompile>' >>$(1).vs10.sourcefiles.filters \
			;; \
		esac;	\
	done

	$(CPP) -P - <$(top_srcdir)/win32/vs9/$(1).vcprojin >$(top_builddir)/win32/vs9/$(1).vcproj
	$(CPP) -P - <$(top_srcdir)/win32/vs10/$(1).vcxprojin >$(top_builddir)/win32/vs10/$(1).vcxproj
	$(CPP) -P - <$(top_srcdir)/win32/vs10/$(1).vcxproj.filtersin >$(top_builddir)/win32/vs10/$(1).vcxproj.filters
	$(RM) $(1).sourcefiles
	$(RM) $(1).vs10.sourcefiles
	$(RM) $(1).vs10.sourcefiles.filters

$(top_builddir)/win32/vs10/$(1).vs10.headers: $(top_builddir)/win32/vs9/$(1).headers

$(top_builddir)/win32/vs9/$(1).headers: Makefile
	-$(RM) $(top_builddir)/win32/vs9/$(1).headers
	-$(RM) $(top_builddir)/win32/vs10/$(1).vs10.headers

	for F in $(_proj_headers); do \
		case $$$$F in \
		$(_proj_headers_excludes)) \
			;; \
		*.h|*.hpp|*.hh|*.hxx) \
			echo 'copy ..\..'$(_proj_subdir)$$$$F' $$$$(CopyDir)\include'$(_headers_destdir)'\'$$$$F'&#x0D;&#x0A;' >>$(top_builddir)/win32/vs9/$(1).headers && \
			echo 'copy ..\..'$(_proj_subdir)$$$$F' $$$$(CopyDir)\include'$(_headers_destdir)'\'$$$$F >>$(top_builddir)/win32/vs10/$(1).vs10.headers \
			;; \
		esac;	\
	done

$(top_builddir)/win32/vs12/$(1).vcxproj.filters: $(top_builddir)/win32/vs12/$(1).vcxproj

$(top_builddir)/win32/vs12/$(1).vcxproj: Makefile
	-$(RM) $(top_builddir)/win32/vs14/$(1).vcxproj
	-$(RM) $(top_builddir)/win32/vs14/$(1).vcxproj.filters

	for F in $(_proj_files); do \
		case $$$$F in \
		$(_proj_filters)) \
			;; \
		*.c|*.cpp|*.cc|*.cxx) \
			echo '   <ClCompile Include="..\..'$(_proj_subdir)$$$$F'" />' >>$(1).vs12.sourcefiles && \
			echo '   <ClCompile Include="..\..'$(_proj_subdir)$$$$F'"><Filter>Source Files</Filter></ClCompile>' >>$(1).vs12.sourcefiles.filters \
			;; \
		esac;	\
	done

	$(CPP) -P - <$(top_srcdir)/win32/vs12/$(1).vcxprojin >$(top_builddir)/win32/vs12/$(1).vcxproj
	$(CPP) -P - <$(top_srcdir)/win32/vs12/$(1).vcxproj.filtersin >$(top_builddir)/win32/vs12/$(1).vcxproj.filters
	$(RM) $(1).vs12.sourcefiles
	$(RM) $(1).vs12.sourcefiles.filters

$(top_builddir)/win32/vs12/$(1).vs12.headers: Makefile
	-$(RM) $(top_builddir)/win32/vs12/$(1).vs12.headers

	for F in $(_proj_headers); do \
		case $$$$F in \
		$(_proj_headers_excludes)) \
			;; \
		*.h|*.hpp|*.hh|*.hxx) \
			echo 'copy ..\..'$(_proj_subdir)$$$$F' $$$$(CopyDir)\include'$(_headers_destdir)'\'$$$$F >>$(top_builddir)/win32/vs12/$(1).vs12.headers \
			;; \
		esac;	\
	done

endef

$(foreach proj,$(MSVCPROJS),$(eval $(call msvcproj-builder,$(proj))))

#
# Create NMake Makefile Sections for Building Introspection files
# from autotools files
# $(1) - File Name of the .gir that is to be generated
#

#define gir-nmake-builder

# Basic sanity check, to make sure required variables are set
#$(if $($(_gir_name)_MSVC_FILES),,$(error Need to define $(_gir_name)_MSVC_FILES))
#$(if $(or $(findstring --header-only,$($(_gir_name)_MSVC_SCANNERFLAGS)),
#          $($(_gir_name)_MSVC_LIBS),
#          $($(_gir_name)_MSVC_PROGRAM)),,
#    $(error Need to define $(_gir_name)_MSVC_LIBS or $(_gir_name)_MSVC_PROGRAM))

#$(top_builddir)/win32/$(_gir_name)_list:
#	for F in $(_gir_files_msvc); do \
#		case $$$$F in \
#		*.c|*.cpp|*.cc|*.cxx|*.h|*.hpp|*.hh|*.hxx) \
#			echo '..'$(_gir_source_subdir_msvc)$$$$F >>$(top_builddir)/win32/$(_gir_name)_list \
#			;; \
#		esac; \
#	done

#$(top_builddir)/win32/$(1).msvc.introspect:
#	-$(RM) $(top_builddir)/win32/$(1).msvc.introspect

# Assemble the Command to Run g-ir-scanner
#	echo $(1)': '$(_gir_name)'_list '$($(_gir_name)_MSVC_GIR_DEPS)>>$(top_builddir)/win32/$(1).msvc.introspect
#	echo '	@-echo Generating $$$$@...'>>$(top_builddir)/win32/$(1).msvc.introspect
#	echo '	$$$$(PYTHON) $$$$(G_IR_SCANNER)	\'>>$(top_builddir)/win32/$(1).msvc.introspect
#	echo '	--verbose -no-libtool	\'>>$(top_builddir)/win32/$(1).msvc.introspect
#	echo '	--namespace='$(_gir_namespace_msvc)'	\'>>$(top_builddir)/win32/$(1).msvc.introspect
#	echo '	--nsversion='$(_gir_version_msvc)'	\'>>$(top_builddir)/win32/$(1).msvc.introspect
#	echo '	'$(_gir_packages_msvc)'	\'>>$(top_builddir)/win32/$(1).msvc.introspect
#	echo '	'$(_gir_libraries_msvc)'	\'>>$(top_builddir)/win32/$(1).msvc.introspect
#	echo '	'$(_gir_program_msvc)'	\'>>$(top_builddir)/win32/$(1).msvc.introspect
#	echo '	--add-include-path=$$$$(G_IR_INCLUDEDIR)	\'>>$(top_builddir)/win32/$(1).msvc.introspect
#	echo '	'$(_gir_includes_msvc)'	\'>>$(top_builddir)/win32/$(1).msvc.introspect
#	echo '	'$(_gir_export_packages_msvc)'	\'>>$(top_builddir)/win32/$(1).msvc.introspect
#	echo '  '$(_gir_c_includes_msvc)'	\'>>$(top_builddir)/win32/$(1).msvc.introspect
#	echo '	--cflags-begin	\'>>$(top_builddir)/win32/$(1).msvc.introspect
#	echo '	'$($(_gir_name)_MSVC_CFLAGS)'	\'>>$(top_builddir)/win32/$(1).msvc.introspect
#	echo '	--cflags-end	\'>>$(top_builddir)/win32/$(1).msvc.introspect
#	echo '	'$($(_gir_name)_MSVC_SCANNERFLAGS)'	\'>>$(top_builddir)/win32/$(1).msvc.introspect
#	echo '	--filelist='$(_gir_name)'_list	\'>>$(top_builddir)/win32/$(1).msvc.introspect
#	echo '	-o $$$$@'>>$(top_builddir)/win32/$(1).msvc.introspect
#	echo '' >>$(top_builddir)/win32/$(1).msvc.introspect

# Finally Assemble the Command to Compile the generated .gir
#	echo '$(_typelib_basename_msvc).typelib: '$(_typelib_basename_msvc)'.gir'>>$(top_builddir)/win32/$(1).msvc.introspect
#	echo '	@-echo Compiling $$$$@...'>>$(top_builddir)/win32/$(1).msvc.introspect
#	echo '	$$$$(G_IR_COMPILER)	\'>>$(top_builddir)/win32/$(1).msvc.introspect
#	echo '	--includedir=. --debug --verbose	\'>>$(top_builddir)/win32/$(1).msvc.introspect
#	echo '	'$(1)'	\'>>$(top_builddir)/win32/$(1).msvc.introspect
#	echo '	-o $$$$@'>>$(top_builddir)/win32/$(1).msvc.introspect
#	echo '' >>$(top_builddir)/win32/$(1).msvc.introspect
#endef

#$(foreach gir,$(MSVC_INTROSPECT_GIRS),$(eval $(call gir-nmake-builder,$(gir))))

dist-hook: \
	$(top_builddir)/win32/vs9/pango.vcproj		\
	$(top_builddir)/win32/vs9/pangowin32.vcproj	\
	$(top_builddir)/win32/vs9/pangoft2.vcproj		\
	$(top_builddir)/win32/vs9/pangocairo.vcproj	\
	$(top_builddir)/win32/vs9/pango.headers		\
	$(INTROSPECTION_INTERMEDIATE_ITEMS)

-include $(top_srcdir)/git.mk

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
